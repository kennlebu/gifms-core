<?php

/**
 * Grants Information Management System
 * Finance management sysytem
 *
 * OpenAPI spec version: 1.0.0
 * Contact: mwangikevinn@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;
use App\Models\BankingModels\BankBranch;

class BankBranchApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation addBankBranch
     *
     * Add a new bank_branch.
     *
     *
     * @return Http response
     */
    public function addBankBranch()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling addBankBranch');
        }
        $body = $input['body'];


        return response('How about implementing addBankBranch as a POST method ?');
    }
    /**
     * Operation updateBankBranch
     *
     * Update an existing bank_branch.
     *
     *
     * @return Http response
     */
    public function updateBankBranch()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling updateBankBranch');
        }
        $body = $input['body'];


        return response('How about implementing updateBankBranch as a PUT method ?');
    }
    /**
     * Operation deleteBankBranch
     *
     * Deletes an bank_branch.
     *
     * @param int $bank_branch_id bank_branch id to delete (required)
     *
     * @return Http response
     */
    public function deleteBankBranch($bank_branch_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteBankBranch as a DELETE method ?');
    }
    /**
     * Operation getBankBranchById
     *
     * Find bank_branch by ID.
     *
     * @param int $bank_branch_id ID of bank_branch to return object (required)
     *
     * @return Http response
     */
    public function getBankBranchById($bank_branch_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getBankBranchById as a GET method ?');
    }
    /**
     * Operation bankBranchesGet
     *
     * bank_branches List.
     *
     *
     * @return Http response
     */
    public function bankBranchesGet()
    {
        $input = Request::all();
        $response = BankBranch::all();

        //bank_id
        if(array_key_exists('bank_id', $input)){

            $bank_id = (int) $input['bank_id'];

                $response = BankBranch::where("bank_id",$bank_id)->get();

        }

        return response()->json($response, 200,array(),JSON_PRETTY_PRINT);
    }
}
