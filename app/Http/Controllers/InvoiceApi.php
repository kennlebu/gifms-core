<?php

/**
 * Grants Information Management System
 * Finance management sysytem
 *
 * OpenAPI spec version: 1.0.0
 * Contact: mwangikevinn@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class InvoiceApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation addInvoice
     *
     * Add a new invoice.
     *
     *
     * @return Http response
     */
    public function addInvoice()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling addInvoice');
        }
        $body = $input['body'];


        return response('How about implementing addInvoice as a POST method ?');
    }
    /**
     * Operation updateInvoice
     *
     * Update an existing invoice.
     *
     *
     * @return Http response
     */
    public function updateInvoice()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling updateInvoice');
        }
        $body = $input['body'];


        return response('How about implementing updateInvoice as a PUT method ?');
    }
    /**
     * Operation deleteInvoice
     *
     * Deletes an invoice.
     *
     * @param int $invoice_id invoice id to delete (required)
     *
     * @return Http response
     */
    public function deleteInvoice($invoice_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteInvoice as a DELETE method ?');
    }
    /**
     * Operation getInvoiceById
     *
     * Find invoice by ID.
     *
     * @param int $invoice_id ID of invoice to return object (required)
     *
     * @return Http response
     */
    public function getInvoiceById($invoice_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getInvoiceById as a GET method ?');
    }
    /**
     * Operation allocateInvoice
     *
     * Allocate invoice by ID.
     *
     * @param int $invoice_id ID of invoice to return object (required)
     *
     * @return Http response
     */
    public function allocateInvoice($invoice_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing allocateInvoice as a PATCH method ?');
    }
    /**
     * Operation approveInvoice
     *
     * Approve invoice by ID.
     *
     * @param int $invoice_id ID of invoice to return object (required)
     *
     * @return Http response
     */
    public function approveInvoice($invoice_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing approveInvoice as a PATCH method ?');
    }
    /**
     * Operation getDocumentById
     *
     * get invoice document by ID.
     *
     * @param int $invoice_id ID of invoice to return object (required)
     *
     * @return Http response
     */
    public function getDocumentById($invoice_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getDocumentById as a GET method ?');
    }
    /**
     * Operation submitInvoiceForApproval
     *
     * Submit invoice by ID.
     *
     * @param int $invoice_id ID of invoice to return object (required)
     *
     * @return Http response
     */
    public function submitInvoiceForApproval($invoice_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing submitInvoiceForApproval as a PATCH method ?');
    }
    /**
     * Operation getInvoices
     *
     * invoices List.
     *
     *
     * @return Http response
     */
    public function getInvoices()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $invoice_id = $input['invoice_id'];


        return response('How about implementing getInvoices as a GET method ?');
    }
}
