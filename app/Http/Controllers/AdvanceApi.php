<?php

/**
 * Grants Information Management System
 * Finance management sysytem
 *
 * OpenAPI spec version: 1.0.0
 * Contact: mwangikevinn@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class AdvanceApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }






















    

    /**
     * Operation addAdvance
     *
     * Add a new advance.
     *
     *
     * @return Http response
     */
    public function addAdvance()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling addAdvance');
        }
        $body = $input['body'];


        return response('How about implementing addAdvance as a POST method ?');
    }






















    
    /**
     * Operation updateAdvance
     *
     * Update an existing advance.
     *
     *
     * @return Http response
     */
    public function updateAdvance()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling updateAdvance');
        }
        $body = $input['body'];


        return response('How about implementing updateAdvance as a PUT method ?');
    }






















    
    /**
     * Operation deleteAdvance
     *
     * Deletes an advance.
     *
     * @param int $advance_id advance id to delete (required)
     *
     * @return Http response
     */
    public function deleteAdvance($advance_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteAdvance as a DELETE method ?');
    }






















    
    /**
     * Operation getAdvanceById
     *
     * Find advance by ID.
     *
     * @param int $advance_id ID of advance to return object (required)
     *
     * @return Http response
     */
    public function getAdvanceById($advance_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getAdvanceById as a GET method ?');
    }






















    
    /**
     * Operation approveAdvance
     *
     * Approve advance by ID.
     *
     * @param int $advance_id ID of advance to return object (required)
     *
     * @return Http response
     */
    public function approveAdvance($advance_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing approveAdvance as a PATCH method ?');
    }






















    
    /**
     * Operation submitAdvanceForApproval
     *
     * Submit advance by ID.
     *
     * @param int $advance_id ID of advance to return object (required)
     *
     * @return Http response
     */
    public function submitAdvanceForApproval($advance_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing submitAdvanceForApproval as a PATCH method ?');
    }






















    
    /**
     * Operation getAdvances
     *
     * advances List.
     *
     *
     * @return Http response
     */
    public function getAdvances()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $advance_id = $input['advance_id'];


        return response('How about implementing getAdvances as a GET method ?');
    }
}
