<?php

/**
 * Grants Information Management System
 * Finance management sysytem
 *
 * OpenAPI spec version: 1.0.0
 * Contact: mwangikevinn@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;
use App\Models\LPOModels\LpoStatuses;

class LPOStatusApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }
















    /**
     * Operation addLpoStatus
     *
     * Add a new lpo status to the store.
     *
     *
     * @return Http response
     */
    public function addLpoStatus()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling addLpoStatus');
        }
        $body = $input['body'];


        return response('How about implementing addLpoStatus as a POST method ?');
    }
























    /**
     * Operation updateLpoStatus
     *
     * Update an existing LPO Status.
     *
     *
     * @return Http response
     */
    public function updateLpoStatus()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling updateLpoStatus');
        }
        $body = $input['body'];


        return response('How about implementing updateLpoStatus as a PUT method ?');
    }

























    /**
     * Operation deleteLpoStatus
     *
     * Deletes an lpo_status.
     *
     * @param int $lpo_status_id lpo status id to delete (required)
     *
     * @return Http response
     */
    public function deleteLpoStatus($lpo_status_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteLpoStatus as a DELETE method ?');
    }





























    /**
     * Operation getLpoStatusById
     *
     * Find lpo by ID.
     *
     * @param int $lpo_status_id ID of lpo status to return object (required)
     *
     * @return Http response
     */
    public function getLpoStatusById($lpo_status_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getLpoStatusById as a GET method ?');
    }


























    /**
     * Operation lpoStatusesGet
     *
     * lpo statuses List.
     *
     *
     * @return Http response
     */
    public function lpoStatusesGet()
    {
        $input = Request::all();

        //path params validation
        $response;

        //path params validation


        //if status is set

        if(array_key_exists('staff_id', $input)){

     

        }else{

             $response = LpoStatuses::where("deleted_at",null)
                ->orderBy('lpo_status', 'desc')
                ->get();
        }


           


            return response()->json($response, 200,array(),JSON_PRETTY_PRINT);
    }
}
