<?php

/**
 * Grants Information Management System
 * Finance management sysytem
 *
 * OpenAPI spec version: 1.0.0
 * Contact: mwangikevinn@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;
use Illuminate\Support\Facades\DB;

class AccountApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation addAccount
     *
     * Add a new account.
     *
     *
     * @return Http response
     */
    public function addAccount()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling addAccount');
        }
        $body = $input['body'];


        return response('How about implementing addAccount as a POST method ?');
    }
    /**
     * Operation updateAccount
     *
     * Update an existing account.
     *
     *
     * @return Http response
     */
    public function updateAccount()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling updateAccount');
        }
        $body = $input['body'];


        return response('How about implementing updateAccount as a PUT method ?');
    }
    /**
     * Operation deleteAccount
     *
     * Deletes an account.
     *
     * @param int $account_id account id to delete (required)
     *
     * @return Http response
     */
    public function deleteAccount($account_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteAccount as a DELETE method ?');
    }
    /**
     * Operation getAccountById
     *
     * Find account by ID.
     *
     * @param int $account_id ID of account to return object (required)
     *
     * @return Http response
     */
    public function getAccountById($account_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getAccountById as a GET method ?');
    }




















    /**
     * Operation accountsGet
     *
     * accounts List.
     *
     *
     * @return Http response
     */
    public function accountsGet()
    {
        $input = Request::all();


        //query builder
        $qb = DB::table('accounts');

        if(array_key_exists('account_format', $input)){
            $qb->where('account_format', $input['account_format']);
        }

        $qb->orderBy('account_name', 'asc');

        $response = $qb->get();
 

        return response()->json($response, 200,array(),JSON_PRETTY_PRINT);
    }
}
