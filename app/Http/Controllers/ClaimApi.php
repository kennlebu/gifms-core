<?php

/**
 * Grants Information Management System
 * Finance management sysytem
 *
 * OpenAPI spec version: 1.0.0
 * Contact: mwangikevinn@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class ClaimApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation addClaim
     *
     * Add a new claim.
     *
     *
     * @return Http response
     */
    public function addClaim()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling addClaim');
        }
        $body = $input['body'];


        return response('How about implementing addClaim as a POST method ?');
    }
    /**
     * Operation updateClaim
     *
     * Update an existing claim.
     *
     *
     * @return Http response
     */
    public function updateClaim()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling updateClaim');
        }
        $body = $input['body'];


        return response('How about implementing updateClaim as a PUT method ?');
    }
    /**
     * Operation deleteClaim
     *
     * Deletes an claim.
     *
     * @param int $claim_id claim id to delete (required)
     *
     * @return Http response
     */
    public function deleteClaim($claim_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteClaim as a DELETE method ?');
    }
    /**
     * Operation getClaimById
     *
     * Find claim by ID.
     *
     * @param int $claim_id ID of claim to return object (required)
     *
     * @return Http response
     */
    public function getClaimById($claim_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getClaimById as a GET method ?');
    }
    /**
     * Operation allocateClaim
     *
     * Allocate claim by ID.
     *
     * @param int $claim_id ID of claim to return object (required)
     *
     * @return Http response
     */
    public function allocateClaim($claim_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing allocateClaim as a PATCH method ?');
    }
    /**
     * Operation approveClaim
     *
     * Approve claim by ID.
     *
     * @param int $claim_id ID of claim to return object (required)
     *
     * @return Http response
     */
    public function approveClaim($claim_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing approveClaim as a PATCH method ?');
    }
    /**
     * Operation submitClaimForApproval
     *
     * Submit claim by ID.
     *
     * @param int $claim_id ID of claim to return object (required)
     *
     * @return Http response
     */
    public function submitClaimForApproval($claim_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing submitClaimForApproval as a PATCH method ?');
    }
    /**
     * Operation getClaims
     *
     * claims List.
     *
     *
     * @return Http response
     */
    public function getClaims()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $claim_id = $input['claim_id'];


        return response('How about implementing getClaims as a GET method ?');
    }
}
