<?php

/**
 * Grants Information Management System
 * Finance management sysytem
 *
 * OpenAPI spec version: 1.0.0
 * Contact: mwangikevinn@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;
use App\Models\StaffModels\Staff;

class StaffApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }





























    

    /**
     * Operation addStaff
     *
     * Add a new staff.
     *
     *
     * @return Http response
     */
    public function addStaff()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling addStaff');
        }
        $body = $input['body'];


        return response('How about implementing addStaff as a POST method ?');
    }





























    
    /**
     * Operation updateStaff
     *
     * Update an existing staff.
     *
     *
     * @return Http response
     */
    public function updateStaff()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling updateStaff');
        }
        $body = $input['body'];


        return response('How about implementing updateStaff as a PUT method ?');
    }





























    
    /**
     * Operation deleteStaff
     *
     * Deletes an staff.
     *
     * @param int $staff_id staff id to delete (required)
     *
     * @return Http response
     */
    public function deleteStaff($staff_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteStaff as a DELETE method ?');
    }





























    
    /**
     * Operation getStaffById
     *
     * Find staff by ID.
     *
     * @param int $staff_id ID of staff to return object (required)
     *
     * @return Http response
     */
    public function getStaffById($staff_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getStaffById as a GET method ?');
    }





























    
    /**
     * Operation staffsGet
     *
     * staffs List.
     *
     *
     * @return Http response
     */
    public function staffsGet()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        // $staff_id = $input['staff_id'];



         $response = Staff::all();


        if(array_key_exists('role_abr', $input)&& $input['role_abr'] = "pm"){
            $response = Staff::where("deleted_at",null)
            ->where('post', "Program Manager")
            ->orWhere('post', "Financial Controller")
            ->get();
        }

        $data    = $this->append_relationships_objects($data);


        return response()->json($response, 200,array(),JSON_PRETTY_PRINT);
    }











    public function append_relationships_objects($data = array()){

        // print_r($data);

        foreach ($data as $key => $value) {

            $staff = Staff::find($data[$key]['id']);

            $data[$key]['roles']                   = $staff->roles;

        }


        return $data;


    }
}
