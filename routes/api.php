<?php

use Illuminate\Http\Request;

/**
 * Grants Information Management System
 * Finance management sysytem
 *
 * OpenAPI spec version: 1.0.0
 * Contact: mwangikevinn@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Grants Information Management System
 * @version 1.0.0
 */





Route::get('/', function (Request $request) {
    return ["version"=>"1.0.0"];
});



Route::post('/authenticate', [	'uses' => 'ApiAuthController@authenticate']);



















/**
 * POST add
 * Summary: Add a new lpo request to the store
 * Notes: lpo awaits approvals from relevant parties
 * Output-Formats: [application/json, application/xml]
 */
Route::POST('/lpo', 'LpoApi@add')->middleware('jwt.auth');
;
/**
 * PUT updateLpo
 * Summary: Update an existing LPO
 * Notes: 
 * Output-Formats: [application/json, application/xml]
 */
Route::PUT('/lpo', 'LpoApi@updateLpo')->middleware('jwt.auth');
/**
 * DELETE deleteLpo
 * Summary: Deletes an lpo
 * Notes: 
 * Output-Formats: [application/json, application/xml]
 */
Route::DELETE('/lpo/{lpo_id}', 'LpoApi@deleteLpo')->middleware('jwt.auth');
/**
 * GET getLpoById
 * Summary: Find lpo by ID
 * Notes: Returns a single lpo
 * Output-Formats: [application/json, application/xml]
 */
Route::GET('/lpo/{lpo_id}', 'LpoApi@getLpoById')->middleware('jwt.auth');
/**
 * POST updateLpoWithForm
 * Summary: Updates a lpo with form data
 * Notes: updates each field when not set as null
 * Output-Formats: [application/json, application/xml]
 */
Route::POST('/lpo/{lpo_id}', 'LpoApi@updateLpoWithForm')->middleware('jwt.auth');
/**
 * GET lposGet
 * Summary: lpo List
 * Notes: The Lpos endpoint returns information about the LPO requested give the parameters injected. The response includes the Reference-No and other details about each lpo, and lists the products in the proper display order. 

 */
Route::GET('/lpos', 'LpoApi@lposGet')->middleware('jwt.auth');

























/**
 * POST addLpoStatus
 * Summary: Add a new lpo status to the store
 * Notes: lpo status
 * Output-Formats: [application/json, application/xml]
 */
Route::POST('/lpo_status', 'LPOStatusApi@addLpoStatus')->middleware('jwt.auth');
/**
 * PUT updateLpoStatus
 * Summary: Update an existing LPO Status
 * Notes: 
 * Output-Formats: [application/json, application/xml]
 */
Route::PUT('/lpo_status', 'LPOStatusApi@updateLpoStatus')->middleware('jwt.auth');
/**
 * DELETE deleteLpoStatus
 * Summary: Deletes an lpo_status
 * Notes: 
 * Output-Formats: [application/json, application/xml]
 */
Route::DELETE('/lpo_status/{lpo_status_id}', 'LPOStatusApi@deleteLpoStatus')->middleware('jwt.auth');
/**
 * GET getLpoStatusById
 * Summary: Find lpo by ID
 * Notes: Returns a single lpo
 * Output-Formats: [application/json, application/xml]
 */
Route::GET('/lpo_status/{lpo_status_id}', 'LPOStatusApi@getLpoStatusById')->middleware('jwt.auth');
/**
 * GET lpoStatusesGet
 * Summary: lpo statuses List
 * Notes: The Lpo Statuses endpoint returns information about the LPO statuses requested give the parameters injected.  

 */
Route::GET('/lpo_statuses', 'LPOStatusApi@lpoStatusesGet')->middleware('jwt.auth');

