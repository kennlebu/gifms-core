{
    "swagger": "2.0",
    "info": {
        "description": "Finance management sysytem",
        "version": "1.0.0",
        "title": "Grants Information Management System",
        "termsOfService": "https://kefinance.clintonhealthaccess.org/terms/",
        "contact": {
            "email": "mwangikevinn@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "localhost:8000",
    "basePath": "/api",
    "tags": [{
            "name": "Supplier",
            "description": "Everything About Supplier",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/Supplier/docs"
            }
        },
        {
            "name": "Supplier Rate",
            "description": "Everything About Supplier Rate",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/supplier_rate/docs"
            }
        },
        {
            "name": "Supply Category",
            "description": "Everything About Supply Category",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/supply_cath/docs"
            }
        },
        {
            "name": "Supply Category Item",
            "description": "Everything About Supply Category Item",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/supply_category_item/docs"
            }
        },
        {
            "name": "Staff",
            "description": "Everything About Staff",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/staff/docs"
            }
        },
        {
            "name": "Department",
            "description": "Everything About Department",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/departments/docs"
            }
        },
        {
            "name": "Roles",
            "description": "Everything About Roles",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/roles/docs"
            }
        },
        {
            "name": "Rights",
            "description": "Everything About Rights",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/right/docs"
            }
        },
        {
            "name": "Project",
            "description": "Everything About Project",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/project/docs"
            }
        },
        {
            "name": "Project Activity",
            "description": "Everything About Project Activity",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/project_activity/docs"
            }
        },
        {
            "name": "Project Budget Account",
            "description": "Everything About Project Budget Account",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/project_budget_account/docs"
            }
        },
        {
            "name": "Project Cash Needs",
            "description": "Everything About Project Cash Needs",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/project_cash_need/docs"
            }
        },
        {
            "name": "Project Master List",
            "description": "Everything About Project Master List",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/project_master_list/docs"
            }
        },
        {
            "name": "Project Objective",
            "description": "Everything About Project Objective",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/project_objective/docs"
            }
        },
        {
            "name": "Project Team",
            "description": "Everything About Project Team",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/project_team/docs"
            }
        },
        {
            "name": "Mobile Payment",
            "description": "Everything About Mobile Payment",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/mobile_payment/docs"
            }
        },
        {
            "name": "Mobile Payment Approval",
            "description": "Everything About Mobile Payment Approval",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/mobile_payment_approval/docs"
            }
        },
        {
            "name": "Mobile Payment Allocation",
            "description": "Everything About Mobile Payment Allocation",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/mobile_payment_allocation/docs"
            }
        },
        {
            "name": "Mobile Payment Payee",
            "description": "Everything About Mobile Payment Payee",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/mobile_payment_payee/docs"
            }
        },
        {
            "name": "Mobile Payment Status",
            "description": "Everything About Mobile Payment Status",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/mobile_payment_status/docs"
            }
        },
        {
            "name": "Mobile Payment Tariff",
            "description": "Everything About Mobile Payment Tariff",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/mobile_payment_tariff/docs"
            }
        },
        {
            "name": "Mobile Payment Type",
            "description": "Everything About Mobile Payment Type",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/mobile_payment_type/docs"
            }
        },
        {
            "name": "Mobile Payment Viewing Permission",
            "description": "Everything About Mobile Payment Viewing Permission",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/mobile_payment_viewing_permission/docs"
            }
        },
        {
            "name": "Payees Upload Mode",
            "description": "Everything About Payees Upload Mode",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/payees_upload_mode/docs"
            }
        },
        {
            "name": "LPO",
            "description": "Everything About Local Purchase Orders",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/lpos/docs"
            }
        },
        {
            "name": "LPO Status",
            "description": "Everything About LPO Statuses",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/lpo_statuses/docs"
            }
        },
        {
            "name": "LPO Quotation",
            "description": "Everything About LPO Quotations",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/lpo_quotations/docs"
            }
        },
        {
            "name": "LPO Item",
            "description": "Everything About LPO Items",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/lpo_items/docs"
            }
        },
        {
            "name": "LPO Term",
            "description": "Everything About LPO Terms",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/lpo_terms/docs"
            }
        },
        {
            "name": "LPO Comment",
            "description": "Everything About LPO Comments",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/lpo_comments/docs"
            }
        },
        {
            "name": "LPO Viewing Permission",
            "description": "Everything About LPO Viewing Permissions",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/lpo_viewing_permissions/docs"
            }
        },
        {
            "name": "LPO Approval",
            "description": "Everything About LPO Approvals",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/lpo_approvals/docs"
            }
        },
        {
            "name": "LPO Default Term",
            "description": "Everything About LPO Default Term",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/lpo_default_term/docs"
            }
        },
        {
            "name": "Currency",
            "description": "Everything About Currency",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/currency/docs"
            }
        },
        {
            "name": "Claim",
            "description": "Everything About Claim",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/claim/docs"
            }
        },
        {
            "name": "Claim Status",
            "description": "Everything About Claim Status",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/claim_status/docs"
            }
        },
        {
            "name": "Claim Approval",
            "description": "Everything About Claim Approval",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/claim_approval/docs"
            }
        },
        {
            "name": "Claim Allocation",
            "description": "Everything About Claim Allocation",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/claim_allocation/docs"
            }
        },
        {
            "name": "Advance",
            "description": "Everything About Advance",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/advance/docs"
            }
        },
        {
            "name": "Advance Status",
            "description": "Everything About Advance Status",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/advance_status/docs"
            }
        },
        {
            "name": "Advance Approval",
            "description": "Everything About Advance Approval",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/advance_approval/docs"
            }
        },
        {
            "name": "Advance Allocation",
            "description": "Everything About Advance Allocation",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/advance_allocation/docs"
            }
        },
        {
            "name": "Account",
            "description": "Everything About Account",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/account/docs"
            }
        },
        {
            "name": "Payment",
            "description": "Everything About Payment",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/payment/docs"
            }
        },
        {
            "name": "Payment Batch",
            "description": "Everything About Payment Batch",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/payment_batch/docs"
            }
        },
        {
            "name": "Payment Mode",
            "description": "Everything About Payment Mode",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/payment_mode/docs"
            }
        },
        {
            "name": "Payment Type",
            "description": "Everything About Payment Type",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/payment_type/docs"
            }
        },
        {
            "name": "Payment Voucher",
            "description": "Everything About Payment Voucher",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/payment_voucher/docs"
            }
        },
        {
            "name": "Approval",
            "description": "Everything About Approval",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/approval/docs"
            }
        },
        {
            "name": "Allocation",
            "description": "Everything About Allocation",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/allocation/docs"
            }
        },
        {
            "name": "Delivery",
            "description": "Everything About Delivery",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/delivery/docs"
            }
        },
        {
            "name": "Delivery Status",
            "description": "Everything About Delivery Status",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/delivery_status/docs"
            }
        },
        {
            "name": "Delivery Approval",
            "description": "Everything About Delivery Approval",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/delivery_approval/docs"
            }
        },
        {
            "name": "Invoice",
            "description": "Everything About Invoice",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/invoice/docs"
            }
        },
        {
            "name": "Invoice Status",
            "description": "Everything About Invoice Status",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/invoice_status/docs"
            }
        },
        {
            "name": "Invoice Approval",
            "description": "Everything About Invoice Approval",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/invoice_approval/docs"
            }
        },
        {
            "name": "Invoice Allocation",
            "description": "Everything About Invoice Allocation",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://kefinance.clintonhealthaccess.org/api/invoice_allocation/docs"
            }
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "/accounts": {
            "get": {
                "summary": "accounts List",
                "description": "The account endpoint returns multiple account requested given the parameters injected. \n",
                "parameters": [{
                    "name": "account_id",
                    "in": "query",
                    "description": "account id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Account"
                ],
                "responses": {
                    "200": {
                        "description": "An array of account returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/account"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/account": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Add a new account",
                "description": "new account",
                "operationId": "add_account",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "account object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/account"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new account for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new account was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Account"
                ],
                "summary": "Update an existing account",
                "description": "",
                "operationId": "update_account",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "account object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/account"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "account not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/account/{account_id}": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Find account by ID",
                "description": "Returns a single account",
                "operationId": "get_account_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "account_id",
                    "in": "path",
                    "description": "ID of account to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/account"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "account not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Account"
                ],
                "summary": "Deletes an account",
                "description": "",
                "operationId": "delete_account",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "account id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "account not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/advances": {
            "get": {
                "summary": "advances List",
                "description": "The advance endpoint returns multiple advance requested given the parameters injected. \n",
                "parameters": [{
                    "name": "advance_id",
                    "in": "query",
                    "description": "advance id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Advance"
                ],
                "responses": {
                    "200": {
                        "description": "An array of advance returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/advance"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/advance": {
            "post": {
                "tags": [
                    "Advance"
                ],
                "summary": "Add a new advance",
                "description": "new advance",
                "operationId": "add_advance",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "advance object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/advance"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new advance for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new advance was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Advance"
                ],
                "summary": "Update an existing advance",
                "description": "",
                "operationId": "update_advance",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "advance object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/advance"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "advance not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/advance/{advance_id}": {
            "get": {
                "tags": [
                    "Advance"
                ],
                "summary": "Find advance by ID",
                "description": "Returns a single advance",
                "operationId": "get_advance_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "advance_id",
                    "in": "path",
                    "description": "ID of advance to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/advance"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "advance not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Advance"
                ],
                "summary": "Deletes an advance",
                "description": "",
                "operationId": "delete_advance",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "advance_id",
                        "in": "path",
                        "description": "advance id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "advance not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/advance/{advance_id}/submit_for_approval": {
            "patch": {
                "tags": [
                    "Advance"
                ],
                "summary": "Submit advance by ID",
                "description": "Submits advance for approval",
                "operationId": "submit_advance_for_approval",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "advance_id",
                    "in": "path",
                    "description": "ID of advance to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/advance"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "advance not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/advance/{advance_id}/approve": {
            "patch": {
                "tags": [
                    "Advance"
                ],
                "summary": "Approve advance by ID",
                "description": "Approves Advance",
                "operationId": "approve_advance",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "advance_id",
                    "in": "path",
                    "description": "ID of advance to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/advance"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "advance not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/advance/{advance_id}/reject": {
            "patch": {
                "tags": [
                    "Advance"
                ],
                "summary": "Approve advance by ID",
                "description": "Rejects Advance",
                "operationId": "reject_advance",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "advance_id",
                    "in": "path",
                    "description": "ID of advance to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/advance"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "advance not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/advance_statuses": {
            "get": {
                "summary": "advance_statuses List",
                "description": "The advance_status endpoint returns multiple advance_status requested given the parameters injected. \n",
                "parameters": [{
                    "name": "advance_status_id",
                    "in": "query",
                    "description": "advance_status id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Advance Status"
                ],
                "responses": {
                    "200": {
                        "description": "An array of advance_status returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/advance_status"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/advance_status": {
            "post": {
                "tags": [
                    "Advance Status"
                ],
                "summary": "Add a new advance_status",
                "description": "new advance_status",
                "operationId": "add_advance_status",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "advance_status object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/advance_status"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new advance_status for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new advance_status was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Advance Status"
                ],
                "summary": "Update an existing advance_status",
                "description": "",
                "operationId": "update_advance_status",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "advance_status object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/advance_status"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "advance_status not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/advance_status/{advance_status_id}": {
            "get": {
                "tags": [
                    "Advance Status"
                ],
                "summary": "Find advance_status by ID",
                "description": "Returns a single advance_status",
                "operationId": "get_advance_status_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "advance_status_id",
                    "in": "path",
                    "description": "ID of advance_status to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/advance_status"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "advance_status not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Advance Status"
                ],
                "summary": "Deletes an advance_status",
                "description": "",
                "operationId": "delete_advance_status",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "advance_status_id",
                        "in": "path",
                        "description": "advance_status id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "advance_status not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/advance_approvals": {
            "get": {
                "summary": "advance_approvals List",
                "description": "The advance_approval endpoint returns multiple advance_approval requested given the parameters injected. \n",
                "parameters": [{
                    "name": "advance_approval_id",
                    "in": "query",
                    "description": "advance_approval id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Advance Approval"
                ],
                "responses": {
                    "200": {
                        "description": "An array of advance_approval returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/advance_approval"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/advance_approval": {
            "post": {
                "tags": [
                    "Advance Approval"
                ],
                "summary": "Add a new advance_approval",
                "description": "new advance_approval",
                "operationId": "add_advance_approval",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "advance_approval object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/advance_approval"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new advance_approval for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new advance_approval was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Advance Approval"
                ],
                "summary": "Update an existing advance_approval",
                "description": "",
                "operationId": "update_advance_approval",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "advance_approval object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/advance_approval"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "advance_approval not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/advance_approval/{advance_approval_id}": {
            "get": {
                "tags": [
                    "Advance Approval"
                ],
                "summary": "Find advance_approval by ID",
                "description": "Returns a single advance_approval",
                "operationId": "get_advance_approval_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "advance_approval_id",
                    "in": "path",
                    "description": "ID of advance_approval to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/advance_approval"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "advance_approval not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Advance Approval"
                ],
                "summary": "Deletes an advance_approval",
                "description": "",
                "operationId": "delete_advance_approval",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "advance_approval_id",
                        "in": "path",
                        "description": "advance_approval id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "advance_approval not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/advance_allocations": {
            "get": {
                "summary": "advance_allocations List",
                "description": "The advance_allocation endpoint returns multiple advance_allocation requested given the parameters injected. \n",
                "parameters": [{
                    "name": "advance_allocation_id",
                    "in": "query",
                    "description": "advance_allocation id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Advance Allocation"
                ],
                "responses": {
                    "200": {
                        "description": "An array of advance_allocation returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/advance_allocation"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/advance_allocation": {
            "post": {
                "tags": [
                    "Advance Allocation"
                ],
                "summary": "Add a new advance_allocation",
                "description": "new advance_allocation",
                "operationId": "add_advance_allocation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "advance_allocation object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/advance_allocation"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new advance_allocation for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new advance_allocation was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Advance Allocation"
                ],
                "summary": "Update an existing advance_allocation",
                "description": "",
                "operationId": "update_advance_allocation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "advance_allocation object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/advance_allocation"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "advance_allocation not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/advance_allocation/{advance_allocation_id}": {
            "get": {
                "tags": [
                    "Advance Allocation"
                ],
                "summary": "Find advance_allocation by ID",
                "description": "Returns a single advance_allocation",
                "operationId": "get_advance_allocation_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "advance_allocation_id",
                    "in": "path",
                    "description": "ID of advance_allocation to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/advance_allocation"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "advance_allocation not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Advance Allocation"
                ],
                "summary": "Deletes an advance_allocation",
                "description": "",
                "operationId": "delete_advance_allocation",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "advance_allocation_id",
                        "in": "path",
                        "description": "advance_allocation id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "advance_allocation not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/allocations": {
            "get": {
                "summary": "allocations List",
                "description": "The allocation endpoint returns multiple allocation requested given the parameters injected. \n",
                "parameters": [{
                    "name": "allocation_id",
                    "in": "query",
                    "description": "allocation id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Allocation"
                ],
                "responses": {
                    "200": {
                        "description": "An array of allocation returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/allocation"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/allocation": {
            "post": {
                "tags": [
                    "Allocation"
                ],
                "summary": "Add a new allocation",
                "description": "new allocation",
                "operationId": "add_allocation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "allocation object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/allocation"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new allocation for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new allocation was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Allocation"
                ],
                "summary": "Update an existing allocation",
                "description": "",
                "operationId": "update_allocation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "allocation object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/allocation"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "allocation not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/allocation/{allocation_id}": {
            "get": {
                "tags": [
                    "Allocation"
                ],
                "summary": "Find allocation by ID",
                "description": "Returns a single allocation",
                "operationId": "get_allocation_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "allocation_id",
                    "in": "path",
                    "description": "ID of allocation to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/allocation"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "allocation not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Allocation"
                ],
                "summary": "Deletes an allocation",
                "description": "",
                "operationId": "delete_allocation",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "allocation_id",
                        "in": "path",
                        "description": "allocation id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "allocation not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/approvals": {
            "get": {
                "summary": "approvals List",
                "description": "The approval endpoint returns multiple approval requested given the parameters injected. \n",
                "parameters": [{
                    "name": "approval_id",
                    "in": "query",
                    "description": "approval id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Approval"
                ],
                "responses": {
                    "200": {
                        "description": "An array of approval returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/approval"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/approval": {
            "post": {
                "tags": [
                    "Approval"
                ],
                "summary": "Add a new approval",
                "description": "new approval",
                "operationId": "add_approval",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "approval object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/approval"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new approval for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new approval was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Approval"
                ],
                "summary": "Update an existing approval",
                "description": "",
                "operationId": "update_approval",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "approval object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/approval"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "approval not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/approval/{approval_id}": {
            "get": {
                "tags": [
                    "Approval"
                ],
                "summary": "Find approval by ID",
                "description": "Returns a single approval",
                "operationId": "get_approval_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "approval_id",
                    "in": "path",
                    "description": "ID of approval to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/approval"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "approval not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Approval"
                ],
                "summary": "Deletes an approval",
                "description": "",
                "operationId": "delete_approval",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "approval_id",
                        "in": "path",
                        "description": "approval id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "approval not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/claims": {
            "get": {
                "summary": "claims List",
                "description": "The claim endpoint returns multiple claim requested given the parameters injected. \n",
                "parameters": [{
                    "name": "claim_id",
                    "in": "query",
                    "description": "claim id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Claim"
                ],
                "responses": {
                    "200": {
                        "description": "An array of claim returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/claim"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/claim": {
            "post": {
                "tags": [
                    "Claim"
                ],
                "summary": "Add a new claim",
                "description": "new claim",
                "operationId": "add_claim",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "claim object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/claim"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new claim for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new claim was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Claim"
                ],
                "summary": "Update an existing claim",
                "description": "",
                "operationId": "update_claim",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "claim object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/claim"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "claim not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/claim/{claim_id}": {
            "get": {
                "tags": [
                    "Claim"
                ],
                "summary": "Find claim by ID",
                "description": "Returns a single claim",
                "operationId": "get_claim_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "claim_id",
                    "in": "path",
                    "description": "ID of claim to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/claim"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "claim not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Claim"
                ],
                "summary": "Deletes an claim",
                "description": "",
                "operationId": "delete_claim",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "claim_id",
                        "in": "path",
                        "description": "claim id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "claim not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/claim/{claim_id}/submit_for_approval": {
            "patch": {
                "tags": [
                    "Claim"
                ],
                "summary": "Submit claim by ID",
                "description": "Submits claim for approval",
                "operationId": "submit_claim_for_approval",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "claim_id",
                    "in": "path",
                    "description": "ID of claim to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/claim"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "claim not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/claim/{claim_id}/approve": {
            "patch": {
                "tags": [
                    "Claim"
                ],
                "summary": "Approve claim by ID",
                "description": "Approves Claim",
                "operationId": "approve_claim",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "claim_id",
                    "in": "path",
                    "description": "ID of claim to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/claim"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "claim not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/claim/{claim_id}/reject": {
            "patch": {
                "tags": [
                    "Claim"
                ],
                "summary": "Reject claim by ID",
                "description": "Approves Claim",
                "operationId": "reject_claim",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "claim_id",
                    "in": "path",
                    "description": "ID of claim to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/claim"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "claim not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/claim/{claim_id}/allocate": {
            "patch": {
                "tags": [
                    "Claim"
                ],
                "summary": "Allocate claim by ID",
                "description": "Allocate Claim",
                "operationId": "allocate_claim",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "claim_id",
                    "in": "path",
                    "description": "ID of claim to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/claim"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "claim not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/claim/{claim_id}/get_document": {
            "get": {
                "tags": [
                    "Claim"
                ],
                "summary": "get claim document by ID",
                "description": "get Claim document",
                "operationId": "get_document_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "claim_id",
                    "in": "path",
                    "description": "ID of claim to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/claim"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "claim not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/claim_statuses": {
            "get": {
                "summary": "claim_statuses List",
                "description": "The claim_status endpoint returns multiple claim_status requested given the parameters injected. \n",
                "parameters": [{
                    "name": "claim_status_id",
                    "in": "query",
                    "description": "claim_status id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Claim Status"
                ],
                "responses": {
                    "200": {
                        "description": "An array of claim_status returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/claim_status"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/claim_status": {
            "post": {
                "tags": [
                    "Claim Status"
                ],
                "summary": "Add a new claim_status",
                "description": "new claim_status",
                "operationId": "add_claim_status",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "claim_status object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/claim_status"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new claim_status for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new claim_status was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Claim Status"
                ],
                "summary": "Update an existing claim_status",
                "description": "",
                "operationId": "update_claim_status",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "claim_status object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/claim_status"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "claim_status not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/claim_status/{claim_status_id}": {
            "get": {
                "tags": [
                    "Claim Status"
                ],
                "summary": "Find claim_status by ID",
                "description": "Returns a single claim_status",
                "operationId": "get_claim_status_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "claim_status_id",
                    "in": "path",
                    "description": "ID of claim_status to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/claim_status"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "claim_status not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Claim Status"
                ],
                "summary": "Deletes an claim_status",
                "description": "",
                "operationId": "delete_claim_status",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "claim_status_id",
                        "in": "path",
                        "description": "claim_status id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "claim_status not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/claim_approvals": {
            "get": {
                "summary": "claim_approvals List",
                "description": "The claim_approval endpoint returns multiple claim_approval requested given the parameters injected. \n",
                "parameters": [{
                    "name": "claim_approval_id",
                    "in": "query",
                    "description": "claim_approval id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Claim Approval"
                ],
                "responses": {
                    "200": {
                        "description": "An array of claim_approval returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/claim_approval"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/claim_approval": {
            "post": {
                "tags": [
                    "Claim Approval"
                ],
                "summary": "Add a new claim_approval",
                "description": "new claim_approval",
                "operationId": "add_claim_approval",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "claim_approval object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/claim_approval"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new claim_approval for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new claim_approval was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Claim Approval"
                ],
                "summary": "Update an existing claim_approval",
                "description": "",
                "operationId": "update_claim_approval",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "claim_approval object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/claim_approval"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "claim_approval not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/claim_approval/{claim_approval_id}": {
            "get": {
                "tags": [
                    "Claim Approval"
                ],
                "summary": "Find claim_approval by ID",
                "description": "Returns a single claim_approval",
                "operationId": "get_claim_approval_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "claim_approval_id",
                    "in": "path",
                    "description": "ID of claim_approval to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/claim_approval"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "claim_approval not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Claim Approval"
                ],
                "summary": "Deletes an claim_approval",
                "description": "",
                "operationId": "delete_claim_approval",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "claim_approval_id",
                        "in": "path",
                        "description": "claim_approval id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "claim_approval not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/claim_allocations": {
            "get": {
                "summary": "claim_allocations List",
                "description": "The claim_allocation endpoint returns multiple claim_allocation requested given the parameters injected. \n",
                "parameters": [{
                    "name": "claim_allocation_id",
                    "in": "query",
                    "description": "claim_allocation id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Claim Allocation"
                ],
                "responses": {
                    "200": {
                        "description": "An array of claim_allocation returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/claim_allocation"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/claim_allocation": {
            "post": {
                "tags": [
                    "Claim Allocation"
                ],
                "summary": "Add a new claim_allocation",
                "description": "new claim_allocation",
                "operationId": "add_claim_allocation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "claim_allocation object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/claim_allocation"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new claim_allocation for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new claim_allocation was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Claim Allocation"
                ],
                "summary": "Update an existing claim_allocation",
                "description": "",
                "operationId": "update_claim_allocation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "claim_allocation object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/claim_allocation"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "claim_allocation not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/claim_allocation/{claim_allocation_id}": {
            "get": {
                "tags": [
                    "Claim Allocation"
                ],
                "summary": "Find claim_allocation by ID",
                "description": "Returns a single claim_allocation",
                "operationId": "get_claim_allocation_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "claim_allocation_id",
                    "in": "path",
                    "description": "ID of claim_allocation to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/claim_allocation"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "claim_allocation not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Claim Allocation"
                ],
                "summary": "Deletes an claim_allocation",
                "description": "",
                "operationId": "delete_claim_allocation",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "claim_allocation_id",
                        "in": "path",
                        "description": "claim_allocation id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "claim_allocation not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/deliveries": {
            "get": {
                "summary": "deliveries List",
                "description": "The delivery endpoint returns multiple delivery requested given the parameters injected. \n",
                "parameters": [{
                    "name": "delivery_id",
                    "in": "query",
                    "description": "delivery id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Delivery"
                ],
                "responses": {
                    "200": {
                        "description": "An array of delivery returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/delivery"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/delivery": {
            "post": {
                "tags": [
                    "Delivery"
                ],
                "summary": "Add a new delivery",
                "description": "new delivery",
                "operationId": "add_delivery",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "delivery object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/delivery"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new delivery for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new delivery was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Delivery"
                ],
                "summary": "Update an existing delivery",
                "description": "",
                "operationId": "update_delivery",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "delivery object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/delivery"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "delivery not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/delivery/{delivery_id}": {
            "get": {
                "tags": [
                    "Delivery"
                ],
                "summary": "Find delivery by ID",
                "description": "Returns a single delivery",
                "operationId": "get_delivery_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "delivery_id",
                    "in": "path",
                    "description": "ID of delivery to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/delivery"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "delivery not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Delivery"
                ],
                "summary": "Deletes an delivery",
                "description": "",
                "operationId": "delete_delivery",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "delivery_id",
                        "in": "path",
                        "description": "delivery id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "delivery not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/delivery/{delivery_id}/submit_for_approval": {
            "patch": {
                "tags": [
                    "Delivery"
                ],
                "summary": "Submit delivery by ID",
                "description": "Submits delivery for approval",
                "operationId": "submit_delivery_for_approval",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "delivery_id",
                    "in": "path",
                    "description": "ID of delivery to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/delivery"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "delivery not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/delivery/{delivery_id}/approve": {
            "patch": {
                "tags": [
                    "Delivery"
                ],
                "summary": "Approve delivery by ID",
                "description": "Approves Delivery",
                "operationId": "approve_delivery",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "delivery_id",
                    "in": "path",
                    "description": "ID of delivery to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/delivery"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "delivery not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/delivery/{delivery_id}/allocate": {
            "patch": {
                "tags": [
                    "Delivery"
                ],
                "summary": "Allocate delivery by ID",
                "description": "Allocate Delivery",
                "operationId": "allocate_delivery",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "delivery_id",
                    "in": "path",
                    "description": "ID of delivery to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/delivery"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "delivery not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/delivery/{delivery_id}/get_document": {
            "get": {
                "tags": [
                    "Delivery"
                ],
                "summary": "get delivery document by ID",
                "description": "get Delivery document",
                "operationId": "get_document_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "delivery_id",
                    "in": "path",
                    "description": "ID of delivery to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/delivery"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "delivery not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/delivery_statuses": {
            "get": {
                "summary": "delivery_statuses List",
                "description": "The delivery_status endpoint returns multiple delivery_status requested given the parameters injected. \n",
                "parameters": [{
                    "name": "delivery_status_id",
                    "in": "query",
                    "description": "delivery_status id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Delivery Status"
                ],
                "responses": {
                    "200": {
                        "description": "An array of delivery_status returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/delivery_status"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/delivery_status": {
            "post": {
                "tags": [
                    "Delivery Status"
                ],
                "summary": "Add a new delivery_status",
                "description": "new delivery_status",
                "operationId": "add_delivery_status",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "delivery_status object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/delivery_status"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new delivery_status for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new delivery_status was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Delivery Status"
                ],
                "summary": "Update an existing delivery_status",
                "description": "",
                "operationId": "update_delivery_status",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "delivery_status object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/delivery_status"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "delivery_status not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/delivery_status/{delivery_status_id}": {
            "get": {
                "tags": [
                    "Delivery Status"
                ],
                "summary": "Find delivery_status by ID",
                "description": "Returns a single delivery_status",
                "operationId": "get_delivery_status_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "delivery_status_id",
                    "in": "path",
                    "description": "ID of delivery_status to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/delivery_status"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "delivery_status not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Delivery Status"
                ],
                "summary": "Deletes an delivery_status",
                "description": "",
                "operationId": "delete_delivery_status",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "delivery_status_id",
                        "in": "path",
                        "description": "delivery_status id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "delivery_status not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/delivery_approvals": {
            "get": {
                "summary": "delivery_approvals List",
                "description": "The delivery_approval endpoint returns multiple delivery_approval requested given the parameters injected. \n",
                "parameters": [{
                    "name": "delivery_approval_id",
                    "in": "query",
                    "description": "delivery_approval id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Delivery Approval"
                ],
                "responses": {
                    "200": {
                        "description": "An array of delivery_approval returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/delivery_approval"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/delivery_approval": {
            "post": {
                "tags": [
                    "Delivery Approval"
                ],
                "summary": "Add a new delivery_approval",
                "description": "new delivery_approval",
                "operationId": "add_delivery_approval",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "delivery_approval object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/delivery_approval"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new delivery_approval for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new delivery_approval was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Delivery Approval"
                ],
                "summary": "Update an existing delivery_approval",
                "description": "",
                "operationId": "update_delivery_approval",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "delivery_approval object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/delivery_approval"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "delivery_approval not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/delivery_approval/{delivery_approval_id}": {
            "get": {
                "tags": [
                    "Delivery Approval"
                ],
                "summary": "Find delivery_approval by ID",
                "description": "Returns a single delivery_approval",
                "operationId": "get_delivery_approval_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "delivery_approval_id",
                    "in": "path",
                    "description": "ID of delivery_approval to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/delivery_approval"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "delivery_approval not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Delivery Approval"
                ],
                "summary": "Deletes an delivery_approval",
                "description": "",
                "operationId": "delete_delivery_approval",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "delivery_approval_id",
                        "in": "path",
                        "description": "delivery_approval id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "delivery_approval not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/invoices": {
            "get": {
                "summary": "invoices List",
                "description": "The invoice endpoint returns multiple invoice requested given the parameters injected. \n",
                "parameters": [{
                    "name": "invoice_id",
                    "in": "query",
                    "description": "invoice id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Invoice"
                ],
                "responses": {
                    "200": {
                        "description": "An array of invoice returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/invoice"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/invoice": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Add a new invoice",
                "description": "new invoice",
                "operationId": "add_invoice",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "invoice object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/invoice"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new invoice for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new invoice was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Update an existing invoice",
                "description": "",
                "operationId": "update_invoice",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "invoice object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/invoice"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "invoice not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/invoice/{invoice_id}": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Find invoice by ID",
                "description": "Returns a single invoice",
                "operationId": "get_invoice_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "invoice_id",
                    "in": "path",
                    "description": "ID of invoice to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/invoice"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "invoice not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Deletes an invoice",
                "description": "",
                "operationId": "delete_invoice",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoice_id",
                        "in": "path",
                        "description": "invoice id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "invoice not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/invoice/{invoice_id}/submit_for_approval": {
            "patch": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Submit invoice by ID",
                "description": "Submits invoice for approval",
                "operationId": "submit_invoice_for_approval",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "invoice_id",
                    "in": "path",
                    "description": "ID of invoice to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/invoice"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "invoice not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/invoice/{invoice_id}/approve": {
            "patch": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Approve invoice by ID",
                "description": "Approves Invoice",
                "operationId": "approve_invoice",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "invoice_id",
                    "in": "path",
                    "description": "ID of invoice to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/invoice"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "invoice not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/invoice/{invoice_id}/reject": {
            "patch": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Reject invoice by ID",
                "description": "Approves Invoice",
                "operationId": "reject_invoice",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "invoice_id",
                    "in": "path",
                    "description": "ID of invoice to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/invoice"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "invoice not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/invoice/{invoice_id}/allocate": {
            "patch": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Allocate invoice by ID",
                "description": "Allocate Invoice",
                "operationId": "allocate_invoice",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "invoice_id",
                    "in": "path",
                    "description": "ID of invoice to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/invoice"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "invoice not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/invoice/{invoice_id}/get_document": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "get invoice document by ID",
                "description": "get Invoice document",
                "operationId": "get_document_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "invoice_id",
                    "in": "path",
                    "description": "ID of invoice to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/invoice"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "invoice not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/invoice/{invoice_id}/get_payment_voucher": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "get payment Voucher by ID",
                "description": "get payment Voucher",
                "operationId": "get_payment_voucher_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/invoice"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "invoice not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "parameters": [{
                "name": "invoice_id",
                "in": "path",
                "required": true,
                "type": "integer",
                "format": "int64",
                "description": "ID of invoice to return object"
            }]
        },
        "/invoice_statuses": {
            "get": {
                "summary": "invoice_statuses List",
                "description": "The invoice_status endpoint returns multiple invoice_status requested given the parameters injected. \n",
                "parameters": [{
                    "name": "invoice_status_id",
                    "in": "query",
                    "description": "invoice_status id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Invoice Status"
                ],
                "responses": {
                    "200": {
                        "description": "An array of invoice_status returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/invoice_status"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/invoice_status": {
            "post": {
                "tags": [
                    "Invoice Status"
                ],
                "summary": "Add a new invoice_status",
                "description": "new invoice_status",
                "operationId": "add_invoice_status",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "invoice_status object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/invoice_status"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new invoice_status for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new invoice_status was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Invoice Status"
                ],
                "summary": "Update an existing invoice_status",
                "description": "",
                "operationId": "update_invoice_status",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "invoice_status object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/invoice_status"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "invoice_status not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/invoice_status/{invoice_status_id}": {
            "get": {
                "tags": [
                    "Invoice Status"
                ],
                "summary": "Find invoice_status by ID",
                "description": "Returns a single invoice_status",
                "operationId": "get_invoice_status_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "invoice_status_id",
                    "in": "path",
                    "description": "ID of invoice_status to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/invoice_status"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "invoice_status not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Invoice Status"
                ],
                "summary": "Deletes an invoice_status",
                "description": "",
                "operationId": "delete_invoice_status",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoice_status_id",
                        "in": "path",
                        "description": "invoice_status id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "invoice_status not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/invoice_approvals": {
            "get": {
                "summary": "invoice_approvals List",
                "description": "The invoice_approval endpoint returns multiple invoice_approval requested given the parameters injected. \n",
                "parameters": [{
                    "name": "invoice_approval_id",
                    "in": "query",
                    "description": "invoice_approval id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Invoice Approval"
                ],
                "responses": {
                    "200": {
                        "description": "An array of invoice_approval returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/invoice_approval"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/invoice_approval": {
            "post": {
                "tags": [
                    "Invoice Approval"
                ],
                "summary": "Add a new invoice_approval",
                "description": "new invoice_approval",
                "operationId": "add_invoice_approval",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "invoice_approval object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/invoice_approval"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new invoice_approval for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new invoice_approval was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Invoice Approval"
                ],
                "summary": "Update an existing invoice_approval",
                "description": "",
                "operationId": "update_invoice_approval",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "invoice_approval object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/invoice_approval"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "invoice_approval not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/invoice_approval/{invoice_approval_id}": {
            "get": {
                "tags": [
                    "Invoice Approval"
                ],
                "summary": "Find invoice_approval by ID",
                "description": "Returns a single invoice_approval",
                "operationId": "get_invoice_approval_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "invoice_approval_id",
                    "in": "path",
                    "description": "ID of invoice_approval to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/invoice_approval"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "invoice_approval not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Invoice Approval"
                ],
                "summary": "Deletes an invoice_approval",
                "description": "",
                "operationId": "delete_invoice_approval",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoice_approval_id",
                        "in": "path",
                        "description": "invoice_approval id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "invoice_approval not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/invoice_allocations": {
            "get": {
                "summary": "invoice_allocations List",
                "description": "The invoice_allocation endpoint returns multiple invoice_allocation requested given the parameters injected. \n",
                "parameters": [{
                    "name": "invoice_allocation_id",
                    "in": "query",
                    "description": "invoice_allocation id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Invoice Approval"
                ],
                "responses": {
                    "200": {
                        "description": "An array of invoice_allocation returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/invoice_allocation"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/invoice_allocation": {
            "post": {
                "tags": [
                    "Invoice Allocation"
                ],
                "summary": "Add a new invoice_allocation",
                "description": "new invoice_allocation",
                "operationId": "add_invoice_allocation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "invoice_allocation object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/invoice_allocation"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new invoice_allocation for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new invoice_allocation was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Invoice Allocation"
                ],
                "summary": "Update an existing invoice_allocation",
                "description": "",
                "operationId": "update_invoice_allocation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "invoice_allocation object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/invoice_allocation"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "invoice_allocation not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/invoice_allocation/{invoice_allocation_id}": {
            "get": {
                "tags": [
                    "Invoice Allocation"
                ],
                "summary": "Find invoice_allocation by ID",
                "description": "Returns a single invoice_allocation",
                "operationId": "get_invoice_allocation_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "invoice_allocation_id",
                    "in": "path",
                    "description": "ID of invoice_allocation to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/invoice_allocation"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "invoice_allocation not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Invoice Allocation"
                ],
                "summary": "Deletes an invoice_allocation",
                "description": "",
                "operationId": "delete_invoice_allocation",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoice_allocation_id",
                        "in": "path",
                        "description": "invoice_allocation id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "invoice_allocation not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/currencies": {
            "get": {
                "summary": "currencies List",
                "description": "The currency endpoint returns multiple currency requested given the parameters injected. \n",
                "parameters": [{
                    "name": "currency_id",
                    "in": "query",
                    "description": "currency id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Currency"
                ],
                "responses": {
                    "200": {
                        "description": "An array of currency returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/currency"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/currency": {
            "post": {
                "tags": [
                    "Currency"
                ],
                "summary": "Add a new currency",
                "description": "new currency",
                "operationId": "add_currency",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "currency object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/currency"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new currency for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new currency was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Currency"
                ],
                "summary": "Update an existing currency",
                "description": "",
                "operationId": "update_currency",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "currency object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/currency"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "currency not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/currency/{currency_id}": {
            "get": {
                "tags": [
                    "Currency"
                ],
                "summary": "Find currency by ID",
                "description": "Returns a single currency",
                "operationId": "get_currency_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "currency_id",
                    "in": "path",
                    "description": "ID of currency to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/currency"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "currency not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Currency"
                ],
                "summary": "Deletes an currency",
                "description": "",
                "operationId": "delete_currency",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "currency_id",
                        "in": "path",
                        "description": "currency id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "currency not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpos": {
            "get": {
                "summary": "lpo List",
                "description": "The Lpos endpoint returns information about the LPO requested give the parameters injected. The response includes the Reference-No\nand other details about each lpo, and lists the products in the\nproper display order.\n",
                "parameters": [{
                    "name": "status",
                    "in": "query",
                    "description": "approval status",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "LPO"
                ],
                "responses": {
                    "200": {
                        "description": "An array of lpos returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/lpo"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo": {
            "post": {
                "tags": [
                    "LPO"
                ],
                "summary": "Add a new lpo request t",
                "description": "lpo awaits approvals from relevant parties",
                "operationId": "add",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "lpo object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/lpo"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully requested a new LPO for approval"
                    },
                    "405": {
                        "description": "Invalid input,lpo request was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "LPO"
                ],
                "summary": "Update an existing LPO",
                "description": "",
                "operationId": "update_lpo",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "LPO object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/lpo"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo/{lpo_id}/get_document": {
            "get": {
                "tags": [
                    "LPO"
                ],
                "summary": "preview LPO document ID",
                "description": "Returns a single lpo document",
                "operationId": "get_document_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "lpo_id",
                    "in": "path",
                    "description": "ID of lpo to return lpo object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/lpo"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo/{lpo_id}": {
            "get": {
                "tags": [
                    "LPO"
                ],
                "summary": "Find lpo by ID",
                "description": "Returns a single lpo",
                "operationId": "get_lpo_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "lpo_id",
                    "in": "path",
                    "description": "ID of lpo to return lpo object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/lpo"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "patch": {
                "tags": [
                    "LPO"
                ],
                "summary": "Submits or Approves Lpo",
                "description": "Submits or Approves Lpo and returns the submitted/approved lpo",
                "operationId": "submit_or_approve",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "lpo_id",
                    "in": "path",
                    "description": "ID of lpo to return lpo object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/lpo"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "post": {
                "tags": [
                    "LPO"
                ],
                "summary": "Updates a lpo with form data",
                "description": "updates each field when not set as null",
                "operationId": "update_lpo_with_form",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "lpo_id",
                        "in": "path",
                        "description": "ID of lpo that needs to be updated",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "chai_ref",
                        "in": "formData",
                        "description": "Updated chai_ref of the lpo",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lpo_date",
                        "in": "formData",
                        "description": "Updated lpo_date of the lpo",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "supplier_id",
                        "in": "formData",
                        "description": "Updated supplier_id of the lpo",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "addressee",
                        "in": "formData",
                        "description": "Updated addressee of the lpo",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "Updated title of the lpo",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "purpose",
                        "in": "formData",
                        "description": "Updated purpose of the lpo",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "requested_by",
                        "in": "formData",
                        "description": "Updated requested_by of the lpo",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "request_date",
                        "in": "formData",
                        "description": "Updated request_date of the lpo",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "formData",
                        "description": "Updated status of the lpo",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "currency",
                        "in": "formData",
                        "description": "Updated currency of the lpo",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "quotation",
                        "in": "formData",
                        "description": "Updated quotation of the lpo",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "supply_category",
                        "in": "formData",
                        "description": "Updated supply_category of the lpo",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "delivery_document",
                        "in": "formData",
                        "description": "Updated delivery_document of the lpo",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_delivered",
                        "in": "formData",
                        "description": "Updated date_delivered of the lpo",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "received_by",
                        "in": "formData",
                        "description": "Updated received_by of the lpo",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "meeting",
                        "in": "formData",
                        "description": "Updated meeting of the lpo",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "comments",
                        "in": "formData",
                        "description": "Updated comments of the lpo",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "preffered_supplier",
                        "in": "formData",
                        "description": "Updated preffered_supplier of the lpo",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "project_id",
                        "in": "formData",
                        "description": "Updated project_id of the lpo",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "account_id",
                        "in": "formData",
                        "description": "Updated account_id of the lpo",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "attention",
                        "in": "formData",
                        "description": "Updated attention of the lpo",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lpo_email",
                        "in": "formData",
                        "description": "Updated lpo_email of the lpo",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "project_manager_id",
                        "in": "formData",
                        "description": "Updated project_manager_id of the lpo",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "quote_exempt",
                        "in": "formData",
                        "description": "Updated quote_exempt of the lpo",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "quote_exempt_explanation",
                        "in": "formData",
                        "description": "Updated quote_exempt_explanation of the lpo",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "LPO"
                ],
                "summary": "Deletes an lpo",
                "description": "",
                "operationId": "delete_lpo",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lpo_id",
                        "in": "path",
                        "description": "lpo id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo/{lpo_id}/submit_for_approval": {
            "patch": {
                "tags": [
                    "LPO"
                ],
                "summary": "Submit lpo by ID",
                "description": "Submits lpo for approval",
                "operationId": "submit_lpo_for_approval",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "lpo_id",
                    "in": "path",
                    "description": "ID of lpo to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/lpo"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo/{lpo_id}/approve": {
            "patch": {
                "tags": [
                    "LPO"
                ],
                "summary": "Approve lpo by ID",
                "description": "Approves LPO",
                "operationId": "approve_lpo",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "lpo_id",
                    "in": "path",
                    "description": "ID of lpo to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/lpo"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo/{lpo_id}/reject": {
            "patch": {
                "tags": [
                    "LPO"
                ],
                "summary": "Approve lpo by ID",
                "description": "Reject LPO",
                "operationId": "reject_lpo",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "lpo_id",
                    "in": "path",
                    "description": "ID of lpo to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/lpo"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo/{lpo_id}/allocate": {
            "patch": {
                "tags": [
                    "LPO"
                ],
                "summary": "Allocate lpo by ID",
                "description": "Allocate LPO",
                "operationId": "allocate_lpo",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "lpo_id",
                    "in": "path",
                    "description": "ID of lpo to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/lpo"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_statuses": {
            "get": {
                "summary": "lpo statuses List",
                "description": "The Lpo Statuses endpoint returns information about the LPO statuses requested give the parameters injected. \n",
                "parameters": [{
                    "name": "staff_id",
                    "in": "query",
                    "description": "staff id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "LPO Status"
                ],
                "responses": {
                    "200": {
                        "description": "An array of lpo_statuses returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/lpo_status"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_status": {
            "post": {
                "tags": [
                    "LPO Status"
                ],
                "summary": "Add a new lpo status",
                "description": "lpo status",
                "operationId": "add_lpo_status",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "lpo status object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/lpo_status"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new Lpo status for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new lpo status was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "LPO Status"
                ],
                "summary": "Update an existing LPO Status",
                "description": "",
                "operationId": "update_lpo_status",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "LPO Status object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/lpo_status"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo status not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_status/{lpo_status_id}": {
            "get": {
                "tags": [
                    "LPO Status"
                ],
                "summary": "Find lpo by ID",
                "description": "Returns a single lpo",
                "operationId": "get_lpo_status_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "lpo_status_id",
                    "in": "path",
                    "description": "ID of lpo status to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/lpo_status"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "LPO Status"
                ],
                "summary": "Deletes an lpo_status",
                "description": "",
                "operationId": "delete_lpo_status",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lpo_status_id",
                        "in": "path",
                        "description": "lpo status id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo status not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_quotations": {
            "get": {
                "summary": "lpo quotations List",
                "description": "The Lpo Quotations endpoint returns information about the LPO Quotation requested given the parameters injected. \n",
                "parameters": [{
                    "name": "lpo_id",
                    "in": "query",
                    "description": "staff id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "LPO Quotation"
                ],
                "responses": {
                    "200": {
                        "description": "An array of lpo_quotations returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/lpo_quotation"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_quotation": {
            "post": {
                "tags": [
                    "LPO Quotation"
                ],
                "summary": "Add a new lpo quotation",
                "description": "new lpo quotation",
                "operationId": "add_lpo_quotation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "lpo quotation object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/lpo_quotation"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new Lpo quotation for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new lpo quotation was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "LPO Quotation"
                ],
                "summary": "Update an existing LPO Quotation",
                "description": "",
                "operationId": "update_lpo_quotation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "LPO Quotation object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/lpo_quotation"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo quotation not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_quotation/{lpo_quotation_id}/get_document": {
            "get": {
                "tags": [
                    "LPO Quotation"
                ],
                "summary": "Find lpo quotation document by ID",
                "description": "Returns a single lpo quotation document",
                "operationId": "get_lpo_quotation_document_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "lpo_quotation_id",
                    "in": "path",
                    "description": "ID of lpo quotation to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/lpo_quotation"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo quotation not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_quotation/{lpo_quotation_id}": {
            "get": {
                "tags": [
                    "LPO Quotation"
                ],
                "summary": "Find lpo quotation by ID",
                "description": "Returns a single lpo quotation",
                "operationId": "get_lpo_quotation_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "lpo_quotation_id",
                    "in": "path",
                    "description": "ID of lpo quotation to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/lpo_quotation"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo quotation not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "LPO Quotation"
                ],
                "summary": "Deletes an lpo_quotation",
                "description": "",
                "operationId": "delete_lpo_quotation",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lpo_quotation_id",
                        "in": "path",
                        "description": "lpo quotation id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo quotation not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_items": {
            "get": {
                "summary": "lpo items List",
                "description": "The Lpo Items endpoint returns information about the LPO Item requested given the parameters injected. \n",
                "parameters": [{
                    "name": "lpo_id",
                    "in": "query",
                    "description": "staff id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "LPO Item"
                ],
                "responses": {
                    "200": {
                        "description": "An array of lpo_items returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/lpo_item"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_item": {
            "post": {
                "tags": [
                    "LPO Item"
                ],
                "summary": "Add a new lpo item",
                "description": "new lpo item",
                "operationId": "add_lpo_item",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "lpo item object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/lpo_item"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new Lpo item for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new lpo item was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "LPO Item"
                ],
                "summary": "Update an existing LPO Item",
                "description": "",
                "operationId": "update_lpo_item",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "LPO Item object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/lpo_item"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo item not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_item/{lpo_item_id}": {
            "get": {
                "tags": [
                    "LPO Item"
                ],
                "summary": "Find lpo item by ID",
                "description": "Returns a single lpo item",
                "operationId": "get_lpo_item_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "lpo_item_id",
                    "in": "path",
                    "description": "ID of lpo item to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/lpo_item"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo item not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "LPO Item"
                ],
                "summary": "Deletes an lpo_item",
                "description": "",
                "operationId": "delete_lpo_item",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lpo_item_id",
                        "in": "path",
                        "description": "lpo item id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo item not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_terms": {
            "get": {
                "summary": "lpo terms List",
                "description": "The Lpo Terms endpoint returns information about the LPO Term requested given the parameters injected. \n",
                "parameters": [{
                    "name": "lpo_id",
                    "in": "query",
                    "description": "staff id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "LPO Term"
                ],
                "responses": {
                    "200": {
                        "description": "An array of lpo_terms returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/lpo_term"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_term": {
            "post": {
                "tags": [
                    "LPO Term"
                ],
                "summary": "Add a new lpo term",
                "description": "new lpo term",
                "operationId": "add_lpo_term",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "lpo term object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/lpo_term"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new Lpo term for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new lpo term was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "LPO Term"
                ],
                "summary": "Update an existing LPO Term",
                "description": "",
                "operationId": "update_lpo_term",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "LPO Term object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/lpo_term"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo term not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_term/{lpo_term_id}": {
            "get": {
                "tags": [
                    "LPO Term"
                ],
                "summary": "Find lpo term by ID",
                "description": "Returns a single lpo term",
                "operationId": "get_lpo_term_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "lpo_term_id",
                    "in": "path",
                    "description": "ID of lpo term to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/lpo_term"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo term not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "LPO Term"
                ],
                "summary": "Deletes an lpo_term",
                "description": "",
                "operationId": "delete_lpo_term",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lpo_term_id",
                        "in": "path",
                        "description": "lpo term id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo term not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_comments": {
            "get": {
                "summary": "lpo comments List",
                "description": "The Lpo Comments endpoint returns information about the LPO Comment requested given the parameters injected. \n",
                "parameters": [{
                    "name": "lpo_id",
                    "in": "query",
                    "description": "staff id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "LPO Comment"
                ],
                "responses": {
                    "200": {
                        "description": "An array of lpo_comments returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/lpo_comment"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_comment": {
            "post": {
                "tags": [
                    "LPO Comment"
                ],
                "summary": "Add a new lpo comment",
                "description": "new lpo comment",
                "operationId": "add_lpo_comment",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "lpo comment object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/lpo_comment"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new Lpo comment for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new lpo comment was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "LPO Comment"
                ],
                "summary": "Update an existing LPO Comment",
                "description": "",
                "operationId": "update_lpo_comment",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "LPO Comment object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/lpo_comment"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo comment not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_comment/{lpo_comment_id}": {
            "get": {
                "tags": [
                    "LPO Comment"
                ],
                "summary": "Find lpo comment by ID",
                "description": "Returns a single lpo comment",
                "operationId": "get_lpo_comment_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "lpo_comment_id",
                    "in": "path",
                    "description": "ID of lpo comment to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/lpo_comment"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo comment not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "LPO Comment"
                ],
                "summary": "Deletes an lpo_comment",
                "description": "",
                "operationId": "delete_lpo_comment",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lpo_comment_id",
                        "in": "path",
                        "description": "lpo comment id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo comment not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_viewing_permissions": {
            "get": {
                "summary": "lpo viewing_permissions List",
                "description": "The Lpo Viewing Permissions endpoint returns information about the LPO Viewing Permission requested given the parameters injected. \n",
                "parameters": [{
                    "name": "lpo_id",
                    "in": "query",
                    "description": "staff id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "LPO Viewing Permission"
                ],
                "responses": {
                    "200": {
                        "description": "An array of lpo_viewing_permissions returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/lpo_viewing_permission"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_viewing_permission": {
            "post": {
                "tags": [
                    "LPO Viewing Permission"
                ],
                "summary": "Add a new lpo viewing_permission",
                "description": "new lpo viewing_permission",
                "operationId": "add_lpo_viewing_permission",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "lpo viewing_permission object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/lpo_viewing_permission"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new Lpo viewing_permission for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new lpo viewing_permission was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "LPO Viewing Permission"
                ],
                "summary": "Update an existing LPO Viewing Permission",
                "description": "",
                "operationId": "update_lpo_viewing_permission",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "LPO Viewing Permission object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/lpo_viewing_permission"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo viewing_permission not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_viewing_permission/{lpo_viewing_permission_id}": {
            "get": {
                "tags": [
                    "LPO Viewing Permission"
                ],
                "summary": "Find lpo viewing_permission by ID",
                "description": "Returns a single lpo viewing_permission",
                "operationId": "get_lpo_viewing_permission_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "lpo_viewing_permission_id",
                    "in": "path",
                    "description": "ID of lpo viewing_permission to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/lpo_viewing_permission"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo viewing_permission not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "LPO Viewing Permission"
                ],
                "summary": "Deletes an lpo_viewing_permission",
                "description": "",
                "operationId": "delete_lpo_viewing_permission",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lpo_viewing_permission_id",
                        "in": "path",
                        "description": "lpo viewing_permission id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo viewing_permission not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_approvals": {
            "get": {
                "summary": "lpo approvals List",
                "description": "The Lpo Approvals endpoint returns information about the LPO Approval requested given the parameters injected. \n",
                "parameters": [{
                    "name": "lpo_id",
                    "in": "query",
                    "description": "staff id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "LPO Approval"
                ],
                "responses": {
                    "200": {
                        "description": "An array of lpo_approvals returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/lpo_approval"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_approval": {
            "post": {
                "tags": [
                    "LPO Approval"
                ],
                "summary": "Add a new lpo approval",
                "description": "new lpo approval",
                "operationId": "add_lpo_approval",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "lpo approval object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/lpo_approval"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new Lpo approval for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new lpo approval was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "LPO Approval"
                ],
                "summary": "Update an existing LPO Approval",
                "description": "",
                "operationId": "update_lpo_approval",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "LPO Approval object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/lpo_approval"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo approval not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_approval/{lpo_approval_id}": {
            "get": {
                "tags": [
                    "LPO Approval"
                ],
                "summary": "Find lpo approval by ID",
                "description": "Returns a single lpo approval",
                "operationId": "get_lpo_approval_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "lpo_approval_id",
                    "in": "path",
                    "description": "ID of lpo approval to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/lpo_approval"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo approval not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "LPO Approval"
                ],
                "summary": "Deletes an lpo_approval",
                "description": "",
                "operationId": "delete_lpo_approval",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lpo_approval_id",
                        "in": "path",
                        "description": "lpo approval id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo approval not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_default_terms": {
            "get": {
                "summary": "lpo_default_terms List",
                "description": "The lpo_default_term endpoint returns multiple lpo_default_term requested given the parameters injected. \n",
                "parameters": [{
                    "name": "lpo_default_term_id",
                    "in": "query",
                    "description": "lpo_default_term id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "LPO Default Term"
                ],
                "responses": {
                    "200": {
                        "description": "An array of lpo_default_term returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/lpo_default_term"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_default_term": {
            "post": {
                "tags": [
                    "LPO Default Term"
                ],
                "summary": "Add a new lpo_default_term",
                "description": "new lpo_default_term",
                "operationId": "add_lpo_default_term",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "lpo_default_term object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/lpo_default_term"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new lpo_default_term for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new lpo_default_term was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "LPO Default Term"
                ],
                "summary": "Update an existing lpo_default_term",
                "description": "",
                "operationId": "update_lpo_default_term",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "lpo_default_term object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/lpo_default_term"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo_default_term not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/lpo_default_term/{lpo_default_term_id}": {
            "get": {
                "tags": [
                    "LPO Default Term"
                ],
                "summary": "Find lpo_default_term by ID",
                "description": "Returns a single lpo_default_term",
                "operationId": "get_lpo_default_term_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "lpo_default_term_id",
                    "in": "path",
                    "description": "ID of lpo_default_term to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/lpo_default_term"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo_default_term not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "LPO Default Term"
                ],
                "summary": "Deletes an lpo_default_term",
                "description": "",
                "operationId": "delete_lpo_default_term",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lpo_default_term_id",
                        "in": "path",
                        "description": "lpo_default_term id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "lpo_default_term not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payments": {
            "get": {
                "summary": "mobile_payments List",
                "description": "The mobile_payment endpoint returns multiple mobile_payment requested given the parameters injected. \n",
                "parameters": [{
                    "name": "mobile_payment_id",
                    "in": "query",
                    "description": "mobile_payment id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Mobile Payment"
                ],
                "responses": {
                    "200": {
                        "description": "An array of mobile_payment returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mobile_payment"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment": {
            "post": {
                "tags": [
                    "Mobile Payment"
                ],
                "summary": "Add a new mobile_payment",
                "description": "new mobile_payment",
                "operationId": "add_mobile_payment",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "mobile_payment object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/mobile_payment"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new mobile_payment for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new mobile_payment was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Mobile Payment"
                ],
                "summary": "Update an existing mobile_payment",
                "description": "",
                "operationId": "update_mobile_payment",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "mobile_payment object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/mobile_payment"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment/{mobile_payment_id}": {
            "get": {
                "tags": [
                    "Mobile Payment"
                ],
                "summary": "Find mobile_payment by ID",
                "description": "Returns a single mobile_payment",
                "operationId": "get_mobile_payment_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "mobile_payment_id",
                    "in": "path",
                    "description": "ID of mobile_payment to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/mobile_payment"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Mobile Payment"
                ],
                "summary": "Deletes an mobile_payment",
                "description": "",
                "operationId": "delete_mobile_payment",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "mobile_payment_id",
                        "in": "path",
                        "description": "mobile_payment id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment/{mobile_payment_id}/submit_for_approval": {
            "patch": {
                "tags": [
                    "Mobile Payment"
                ],
                "summary": "Submit mobile_payment by ID",
                "description": "Submits",
                "operationId": "submit_for_approval",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "mobile_payment_id",
                    "in": "path",
                    "description": "ID of mobile_payment to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/mobile_payment"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment/{mobile_payment_id}/approve": {
            "patch": {
                "tags": [
                    "Mobile Payment"
                ],
                "summary": "Submit/Approve mobile_payment by ID",
                "description": "Approves Mobile Payment",
                "operationId": "approve",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "mobile_payment_id",
                    "in": "path",
                    "description": "ID of mobile_payment to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/mobile_payment"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment/{mobile_payment_id}/reject": {
            "patch": {
                "tags": [
                    "Mobile Payment"
                ],
                "summary": "Submit/Approve mobile_payment by ID",
                "description": "Reject Mobile Payment",
                "operationId": "reject",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "mobile_payment_id",
                    "in": "path",
                    "description": "ID of mobile_payment to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/mobile_payment"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment/{mobile_payment_id}/allocate": {
            "patch": {
                "tags": [
                    "Mobile Payment"
                ],
                "summary": "Allocate mobile_payment by ID",
                "description": "Allocate Mobile Payment",
                "operationId": "allocate_mobile_payment",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "mobile_payment_id",
                    "in": "path",
                    "description": "ID of mobile_payment to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/mobile_payment"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment/{mobile_payment_id}/get_document": {
            "get": {
                "tags": [
                    "Mobile Payment"
                ],
                "summary": "get mobile_payment document by ID",
                "description": "get Mobile Payment Document",
                "operationId": "get_document_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "mobile_payment_id",
                    "in": "path",
                    "description": "ID of mobile_payment to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/mobile_payment"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment/{mobile_payment_id}/get_attendance_sheet": {
            "get": {
                "tags": [
                    "Mobile Payment"
                ],
                "summary": "get mobile_payment attendance sheet by ID",
                "description": "get Mobile Payment Attendance Sheet",
                "operationId": "get_attendance_sheet_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "mobile_payment_id",
                    "in": "path",
                    "description": "ID of mobile_payment to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/mobile_payment"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment/{mobile_payment_id}/payees": {
            "post": {
                "tags": [
                    "Mobile Payment"
                ],
                "summary": "post mobile_payment payees in acsv by ID",
                "description": "get Mobile Payment Attendance Sheet",
                "operationId": "post_payees",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "mobile_payment_id",
                    "in": "path",
                    "description": "ID of mobile_payment to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/mobile_payment"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_approvals": {
            "get": {
                "summary": "mobile_payment_approvals List",
                "description": "The mobile_payment_approval endpoint returns multiple mobile_payment_approval requested given the parameters injected. \n",
                "parameters": [{
                    "name": "mobile_payment_approval_id",
                    "in": "query",
                    "description": "mobile_payment_approval id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Mobile Payment Approval"
                ],
                "responses": {
                    "200": {
                        "description": "An array of mobile_payment_approval returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mobile_payment_approval"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_approval": {
            "post": {
                "tags": [
                    "Mobile Payment Approval"
                ],
                "summary": "Add a new mobile_payment_approval",
                "description": "new mobile_payment_approval",
                "operationId": "add_mobile_payment_approval",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "mobile_payment_approval object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/mobile_payment_approval"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new mobile_payment_approval for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new mobile_payment_approval was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Mobile Payment Approval"
                ],
                "summary": "Update an existing mobile_payment_approval",
                "description": "",
                "operationId": "update_mobile_payment_approval",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "mobile_payment_approval object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/mobile_payment_approval"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_approval not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_approval/{mobile_payment_approval_id}": {
            "get": {
                "tags": [
                    "Mobile Payment Approval"
                ],
                "summary": "Find mobile_payment_approval by ID",
                "description": "Returns a single mobile_payment_approval",
                "operationId": "get_mobile_payment_approval_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "mobile_payment_approval_id",
                    "in": "path",
                    "description": "ID of mobile_payment_approval to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/mobile_payment_approval"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_approval not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Mobile Payment Approval"
                ],
                "summary": "Deletes an mobile_payment_approval",
                "description": "",
                "operationId": "delete_mobile_payment_approval",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "mobile_payment_approval_id",
                        "in": "path",
                        "description": "mobile_payment_approval id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_approval not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_allocations": {
            "get": {
                "summary": "mobile_payment_allocations List",
                "description": "The mobile_payment_allocation endpoint returns multiple mobile_payment_allocation requested given the parameters injected. \n",
                "parameters": [{
                    "name": "mobile_payment_allocation_id",
                    "in": "query",
                    "description": "mobile_payment_allocation id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Mobile Payment Allocation"
                ],
                "responses": {
                    "200": {
                        "description": "An array of mobile_payment_allocation returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mobile_payment_allocation"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_allocation": {
            "post": {
                "tags": [
                    "Mobile Payment Allocation"
                ],
                "summary": "Add a new mobile_payment_allocation",
                "description": "new mobile_payment_allocation",
                "operationId": "add_mobile_payment_allocation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "mobile_payment_allocation object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/mobile_payment_allocation"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new mobile_payment_allocation for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new mobile_payment_allocation was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Mobile Payment Allocation"
                ],
                "summary": "Update an existing mobile_payment_allocation",
                "description": "",
                "operationId": "update_mobile_payment_allocation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "mobile_payment_allocation object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/mobile_payment_allocation"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_allocation not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_allocation/{mobile_payment_allocation_id}": {
            "get": {
                "tags": [
                    "Mobile Payment Allocation"
                ],
                "summary": "Find mobile_payment_allocation by ID",
                "description": "Returns a single mobile_payment_allocation",
                "operationId": "get_mobile_payment_allocation_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "mobile_payment_allocation_id",
                    "in": "path",
                    "description": "ID of mobile_payment_allocation to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/mobile_payment_allocation"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_allocation not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Mobile Payment Allocation"
                ],
                "summary": "Deletes an mobile_payment_allocation",
                "description": "",
                "operationId": "delete_mobile_payment_allocation",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "mobile_payment_allocation_id",
                        "in": "path",
                        "description": "mobile_payment_allocation id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_allocation not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_payees": {
            "get": {
                "summary": "mobile_payment_payees List",
                "description": "The mobile_payment_payee endpoint returns multiple mobile_payment_payees requested given the parameters injected. \n",
                "parameters": [{
                    "name": "mobile_payment_payee_id",
                    "in": "query",
                    "description": "mobile_payment_payee id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Mobile Payment Payee"
                ],
                "responses": {
                    "200": {
                        "description": "An array of mobile_payment_payee returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mobile_payment_payee"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_payee": {
            "post": {
                "tags": [
                    "Mobile Payment Payee"
                ],
                "summary": "Add a new mobile_payment_payee",
                "description": "new mobile_payment_payee",
                "operationId": "add_mobile_payment_payee",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "mobile_payment_payee object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/mobile_payment_payee"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new mobile_payment_payee for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new mobile_payment_payee was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Mobile Payment Payee"
                ],
                "summary": "Update an existing mobile_payment_payee",
                "description": "",
                "operationId": "update_mobile_payment_payee",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "mobile_payment_payee object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/mobile_payment_payee"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_payee not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_payee/{mobile_payment_payee_id}": {
            "get": {
                "tags": [
                    "Mobile Payment Payee"
                ],
                "summary": "Find mobile_payment_payee by ID",
                "description": "Returns a single mobile_payment_payee",
                "operationId": "get_mobile_payment_payee_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "mobile_payment_payee_id",
                    "in": "path",
                    "description": "ID of mobile_payment_payee to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/mobile_payment_payee"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_payee not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Mobile Payment Payee"
                ],
                "summary": "Deletes an mobile_payment_payee",
                "description": "",
                "operationId": "delete_mobile_payment_payee",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "mobile_payment_payee_id",
                        "in": "path",
                        "description": "mobile_payment_payee id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_payee not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_statuses": {
            "get": {
                "summary": "mobile_payment_statuses List",
                "description": "The mobile_payment_status endpoint returns multiple mobile_payment_status requested given the parameters injected. \n",
                "parameters": [{
                    "name": "mobile_payment_status_id",
                    "in": "query",
                    "description": "mobile_payment_status id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Mobile Payment Status"
                ],
                "responses": {
                    "200": {
                        "description": "An array of mobile_payment_status returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mobile_payment_status"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_status": {
            "post": {
                "tags": [
                    "Mobile Payment Status"
                ],
                "summary": "Add a new mobile_payment_status",
                "description": "new mobile_payment_status",
                "operationId": "add_mobile_payment_status",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "mobile_payment_status object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/mobile_payment_status"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new mobile_payment_status for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new mobile_payment_status was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Mobile Payment Status"
                ],
                "summary": "Update an existing mobile_payment_status",
                "description": "",
                "operationId": "update_mobile_payment_status",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "mobile_payment_status object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/mobile_payment_status"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_status not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_status/{mobile_payment_status_id}": {
            "get": {
                "tags": [
                    "Mobile Payment Status"
                ],
                "summary": "Find mobile_payment_status by ID",
                "description": "Returns a single mobile_payment_status",
                "operationId": "get_mobile_payment_status_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "mobile_payment_status_id",
                    "in": "path",
                    "description": "ID of mobile_payment_status to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/mobile_payment_status"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_status not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Mobile Payment Status"
                ],
                "summary": "Deletes an mobile_payment_status",
                "description": "",
                "operationId": "delete_mobile_payment_status",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "mobile_payment_status_id",
                        "in": "path",
                        "description": "mobile_payment_status id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_status not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_tariffs": {
            "get": {
                "summary": "mobile_payment_tariffs List",
                "description": "The mobile_payment_tariff endpoint returns multiple mobile_payment_tariff requested given the parameters injected. \n",
                "parameters": [{
                    "name": "mobile_payment_tariff_id",
                    "in": "query",
                    "description": "mobile_payment_tariff id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Mobile Payment Tariff"
                ],
                "responses": {
                    "200": {
                        "description": "An array of mobile_payment_tariff returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mobile_payment_tariff"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_tariff": {
            "post": {
                "tags": [
                    "Mobile Payment Tariff"
                ],
                "summary": "Add a new mobile_payment_tariff",
                "description": "new mobile_payment_tariff",
                "operationId": "add_mobile_payment_tariff",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "mobile_payment_tariff object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/mobile_payment_tariff"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new mobile_payment_tariff for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new mobile_payment_tariff was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Mobile Payment Tariff"
                ],
                "summary": "Update an existing mobile_payment_tariff",
                "description": "",
                "operationId": "update_mobile_payment_tariff",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "mobile_payment_tariff object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/mobile_payment_tariff"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_tariff not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_tariff/{mobile_payment_tariff_id}": {
            "get": {
                "tags": [
                    "Mobile Payment Tariff"
                ],
                "summary": "Find mobile_payment_tariff by ID",
                "description": "Returns a single mobile_payment_tariff",
                "operationId": "get_mobile_payment_tariff_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "mobile_payment_tariff_id",
                    "in": "path",
                    "description": "ID of mobile_payment_tariff to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/mobile_payment_tariff"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_tariff not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Mobile Payment Tariff"
                ],
                "summary": "Deletes an mobile_payment_tariff",
                "description": "",
                "operationId": "delete_mobile_payment_tariff",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "mobile_payment_tariff_id",
                        "in": "path",
                        "description": "mobile_payment_tariff id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_tariff not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_types": {
            "get": {
                "summary": "mobile_payment_types List",
                "description": "The mobile_payment_type endpoint returns multiple mobile_payment_type requested given the parameters injected. \n",
                "parameters": [{
                    "name": "mobile_payment_type_id",
                    "in": "query",
                    "description": "mobile_payment_type id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Mobile Payment Type"
                ],
                "responses": {
                    "200": {
                        "description": "An array of mobile_payment_type returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mobile_payment_type"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_type": {
            "post": {
                "tags": [
                    "Mobile Payment Type"
                ],
                "summary": "Add a new mobile_payment_type",
                "description": "new mobile_payment_type",
                "operationId": "add_mobile_payment_type",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "mobile_payment_type object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/mobile_payment_type"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new mobile_payment_type for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new mobile_payment_type was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Mobile Payment Type"
                ],
                "summary": "Update an existing mobile_payment_type",
                "description": "",
                "operationId": "update_mobile_payment_type",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "mobile_payment_type object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/mobile_payment_type"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_type not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_type/{mobile_payment_type_id}": {
            "get": {
                "tags": [
                    "Mobile Payment Type"
                ],
                "summary": "Find mobile_payment_type by ID",
                "description": "Returns a single mobile_payment_type",
                "operationId": "get_mobile_payment_type_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "mobile_payment_type_id",
                    "in": "path",
                    "description": "ID of mobile_payment_type to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/mobile_payment_type"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_type not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Mobile Payment Type"
                ],
                "summary": "Deletes an mobile_payment_type",
                "description": "",
                "operationId": "delete_mobile_payment_type",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "mobile_payment_type_id",
                        "in": "path",
                        "description": "mobile_payment_type id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_type not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_viewing_permissions": {
            "get": {
                "summary": "mobile_payment_viewing_permissions List",
                "description": "The mobile_payment_viewing_permission endpoint returns multiple mobile_payment_viewing_permission requested given the parameters injected. \n",
                "parameters": [{
                    "name": "mobile_payment_viewing_permission_id",
                    "in": "query",
                    "description": "mobile_payment_viewing_permission id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Mobile Payment Viewing Permission"
                ],
                "responses": {
                    "200": {
                        "description": "An array of mobile_payment_viewing_permission returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mobile_payment_viewing_permission"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_viewing_permission": {
            "post": {
                "tags": [
                    "Mobile Payment Viewing Permission"
                ],
                "summary": "Add a new mobile_payment_viewing_permission",
                "description": "new mobile_payment_viewing_permission",
                "operationId": "add_mobile_payment_viewing_permission",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "mobile_payment_viewing_permission object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/mobile_payment_viewing_permission"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new mobile_payment_viewing_permission for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new mobile_payment_viewing_permission was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Mobile Payment Viewing Permission"
                ],
                "summary": "Update an existing mobile_payment_viewing_permission",
                "description": "",
                "operationId": "update_mobile_payment_viewing_permission",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "mobile_payment_viewing_permission object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/mobile_payment_viewing_permission"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_viewing_permission not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/mobile_payment_viewing_permission/{mobile_payment_viewing_permission_id}": {
            "get": {
                "tags": [
                    "Mobile Payment Viewing Permission"
                ],
                "summary": "Find mobile_payment_viewing_permission by ID",
                "description": "Returns a single mobile_payment_viewing_permission",
                "operationId": "get_mobile_payment_viewing_permission_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "mobile_payment_viewing_permission_id",
                    "in": "path",
                    "description": "ID of mobile_payment_viewing_permission to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/mobile_payment_viewing_permission"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_viewing_permission not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Mobile Payment Viewing Permission"
                ],
                "summary": "Deletes an mobile_payment_viewing_permission",
                "description": "",
                "operationId": "delete_mobile_payment_viewing_permission",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "mobile_payment_viewing_permission_id",
                        "in": "path",
                        "description": "mobile_payment_viewing_permission id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "mobile_payment_viewing_permission not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payees_upload_modes": {
            "get": {
                "summary": "payees_upload_modes List",
                "description": "The payees_upload_mode endpoint returns multiple payees_upload_mode requested given the parameters injected. \n",
                "parameters": [{
                    "name": "payees_upload_mode_id",
                    "in": "query",
                    "description": "payees_upload_mode id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Payees Upload Mode"
                ],
                "responses": {
                    "200": {
                        "description": "An array of payees_upload_mode returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/payees_upload_mode"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payees_upload_mode": {
            "post": {
                "tags": [
                    "Payees Upload Mode"
                ],
                "summary": "Add a new payees_upload_mode",
                "description": "new payees_upload_mode",
                "operationId": "add_payees_upload_mode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "payees_upload_mode object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/payees_upload_mode"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new payees_upload_mode for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new payees_upload_mode was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Payees Upload Mode"
                ],
                "summary": "Update an existing payees_upload_mode",
                "description": "",
                "operationId": "update_payees_upload_mode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "payees_upload_mode object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/payees_upload_mode"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payees_upload_mode not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payees_upload_mode/{payees_upload_mode_id}": {
            "get": {
                "tags": [
                    "Payees Upload Mode"
                ],
                "summary": "Find payees_upload_mode by ID",
                "description": "Returns a single payees_upload_mode",
                "operationId": "get_payees_upload_mode_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "payees_upload_mode_id",
                    "in": "path",
                    "description": "ID of payees_upload_mode to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/payees_upload_mode"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payees_upload_mode not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Payees Upload Mode"
                ],
                "summary": "Deletes an payees_upload_mode",
                "description": "",
                "operationId": "delete_payees_upload_mode",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "payees_upload_mode_id",
                        "in": "path",
                        "description": "payees_upload_mode id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payees_upload_mode not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payments": {
            "get": {
                "summary": "payments List",
                "description": "The payment endpoint returns multiple payment requested given the parameters injected. \n",
                "parameters": [{
                    "name": "payment_id",
                    "in": "query",
                    "description": "payment id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Payment"
                ],
                "responses": {
                    "200": {
                        "description": "An array of payment returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/payment"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payment": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Add a new payment",
                "description": "new payment",
                "operationId": "add_payment",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "payment object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/payment"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new payment for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new payment was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Payment"
                ],
                "summary": "Update an existing payment",
                "description": "",
                "operationId": "update_payment",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "payment object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/payment"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payment not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payment/{payment_id}": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Find payment by ID",
                "description": "Returns a single payment",
                "operationId": "get_payment_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "payment_id",
                    "in": "path",
                    "description": "ID of payment to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/payment"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payment not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payment/{payment_id}/get_voucher": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "get payment document by ID",
                "description": "get Payment document",
                "operationId": "get_document_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "payment_id",
                    "in": "path",
                    "description": "ID of payment to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/payment"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payment not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Payment"
                ],
                "summary": "Deletes an payment",
                "description": "",
                "operationId": "delete_payment",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "payment_id",
                        "in": "path",
                        "description": "payment id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payment not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payment_batches": {
            "get": {
                "summary": "payment_batches List",
                "description": "The payment_batch endpoint returns multiple payment_batch requested given the parameters injected. \n",
                "parameters": [{
                    "name": "payment_batch_id",
                    "in": "query",
                    "description": "payment_batch id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Payment Batch"
                ],
                "responses": {
                    "200": {
                        "description": "An array of payment_batch returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/payment_batch"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payment_batch": {
            "post": {
                "tags": [
                    "Payment Batch"
                ],
                "summary": "Add a new payment_batch",
                "description": "new payment_batch",
                "operationId": "add_payment_batch",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "payment_batch object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/payment_batch"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new payment_batch for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new payment_batch was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Payment Batch"
                ],
                "summary": "Update an existing payment_batch",
                "description": "",
                "operationId": "update_payment_batch",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "payment_batch object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/payment_batch"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payment_batch not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payment_batch/{payment_batch_id}": {
            "get": {
                "tags": [
                    "Payment Batch"
                ],
                "summary": "Find payment_batch by ID",
                "description": "Returns a single payment_batch",
                "operationId": "get_payment_batch_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "payment_batch_id",
                    "in": "path",
                    "description": "ID of payment_batch to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/payment_batch"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payment_batch not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Payment Batch"
                ],
                "summary": "Deletes an payment_batch",
                "description": "",
                "operationId": "delete_payment_batch",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "payment_batch_id",
                        "in": "path",
                        "description": "payment_batch id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payment_batch not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payment_modes": {
            "get": {
                "summary": "payment_modes List",
                "description": "The payment_mode endpoint returns multiple payment_mode requested given the parameters injected. \n",
                "parameters": [{
                    "name": "payment_mode_id",
                    "in": "query",
                    "description": "payment_mode id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Payment Mode"
                ],
                "responses": {
                    "200": {
                        "description": "An array of payment_mode returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/payment_mode"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payment_mode": {
            "post": {
                "tags": [
                    "Payment Mode"
                ],
                "summary": "Add a new payment_mode",
                "description": "new payment_mode",
                "operationId": "add_payment_mode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "payment_mode object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/payment_mode"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new payment_mode for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new payment_mode was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Payment Mode"
                ],
                "summary": "Update an existing payment_mode",
                "description": "",
                "operationId": "update_payment_mode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "payment_mode object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/payment_mode"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payment_mode not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payment_mode/{payment_mode_id}": {
            "get": {
                "tags": [
                    "Payment Mode"
                ],
                "summary": "Find payment_mode by ID",
                "description": "Returns a single payment_mode",
                "operationId": "get_payment_mode_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "payment_mode_id",
                    "in": "path",
                    "description": "ID of payment_mode to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/payment_mode"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payment_mode not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Payment Mode"
                ],
                "summary": "Deletes an payment_mode",
                "description": "",
                "operationId": "delete_payment_mode",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "payment_mode_id",
                        "in": "path",
                        "description": "payment_mode id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payment_mode not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payment_types": {
            "get": {
                "summary": "payment_types List",
                "description": "The payment_type endpoint returns multiple payment_type requested given the parameters injected. \n",
                "parameters": [{
                    "name": "payment_type_id",
                    "in": "query",
                    "description": "payment_type id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Payment Type"
                ],
                "responses": {
                    "200": {
                        "description": "An array of payment_type returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/payment_type"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payment_type": {
            "post": {
                "tags": [
                    "Payment Type"
                ],
                "summary": "Add a new payment_type",
                "description": "new payment_type",
                "operationId": "add_payment_type",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "payment_type object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/payment_type"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new payment_type for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new payment_type was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Payment Type"
                ],
                "summary": "Update an existing payment_type",
                "description": "",
                "operationId": "update_payment_type",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "payment_type object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/payment_type"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payment_type not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payment_type/{payment_type_id}": {
            "get": {
                "tags": [
                    "Payment Type"
                ],
                "summary": "Find payment_type by ID",
                "description": "Returns a single payment_type",
                "operationId": "get_payment_type_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "payment_type_id",
                    "in": "path",
                    "description": "ID of payment_type to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/payment_type"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payment_type not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Payment Type"
                ],
                "summary": "Deletes an payment_type",
                "description": "",
                "operationId": "delete_payment_type",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "payment_type_id",
                        "in": "path",
                        "description": "payment_type id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payment_type not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payment_vouchers": {
            "get": {
                "summary": "payment_vouchers List",
                "description": "The payment_voucher endpoint returns multiple payment_voucher requested given the parameters injected. \n",
                "parameters": [{
                    "name": "payment_voucher_id",
                    "in": "query",
                    "description": "payment_voucher id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Payment Voucher"
                ],
                "responses": {
                    "200": {
                        "description": "An array of payment_voucher returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/payment_voucher"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payment_voucher": {
            "post": {
                "tags": [
                    "Payment Voucher"
                ],
                "summary": "Add a new payment_voucher",
                "description": "new payment_voucher",
                "operationId": "add_payment_voucher",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "payment_voucher object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/payment_voucher"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new payment_voucher for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new payment_voucher was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Payment Voucher"
                ],
                "summary": "Update an existing payment_voucher",
                "description": "",
                "operationId": "update_payment_voucher",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "payment_voucher object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/payment_voucher"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payment_voucher not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payment_voucher/{payment_voucher_id}": {
            "get": {
                "tags": [
                    "Payment Voucher"
                ],
                "summary": "Find payment_voucher by ID",
                "description": "Returns a single payment_voucher",
                "operationId": "get_payment_voucher_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "payment_voucher_id",
                    "in": "path",
                    "description": "ID of payment_voucher to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/payment_voucher"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payment_voucher not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/payment_voucher/{payment_voucher_id}/get_document": {
            "get": {
                "tags": [
                    "Payment Voucher"
                ],
                "summary": "get payment_voucher document by ID",
                "description": "get Payment Voucher document",
                "operationId": "get_document_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "payment_voucher_id",
                    "in": "path",
                    "description": "ID of payment_voucher to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/payment_voucher"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payment_voucher not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Payment Voucher"
                ],
                "summary": "Deletes an payment_voucher",
                "description": "",
                "operationId": "delete_payment_voucher",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "payment_voucher_id",
                        "in": "path",
                        "description": "payment_voucher id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "payment_voucher not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/projects": {
            "get": {
                "summary": "projects List",
                "description": "The project endpoint returns multiple project requested given the parameters injected. \n",
                "parameters": [{
                    "name": "project_id",
                    "in": "query",
                    "description": "project id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Project"
                ],
                "responses": {
                    "200": {
                        "description": "An array of project returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/project"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project": {
            "post": {
                "tags": [
                    "Project"
                ],
                "summary": "Add a new project",
                "description": "new project",
                "operationId": "add_project",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "project object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/project"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new project for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new project was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Project"
                ],
                "summary": "Update an existing project",
                "description": "",
                "operationId": "update_project",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "project object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/project"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project/{project_id}": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Find project by ID",
                "description": "Returns a single project",
                "operationId": "get_project_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "project_id",
                    "in": "path",
                    "description": "ID of project to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/project"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Project"
                ],
                "summary": "Deletes an project",
                "description": "",
                "operationId": "delete_project",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "project id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project_activities": {
            "get": {
                "summary": "project_activities List",
                "description": "The project_activity endpoint returns multiple project_activity requested given the parameters injected. \n",
                "parameters": [{
                    "name": "project_activity_id",
                    "in": "query",
                    "description": "project_activity id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Project Activity"
                ],
                "responses": {
                    "200": {
                        "description": "An array of project_activity returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/project_activity"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project_activity": {
            "post": {
                "tags": [
                    "Project Activity"
                ],
                "summary": "Add a new project_activity",
                "description": "new project_activity",
                "operationId": "add_project_activity",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "project_activity object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/project_activity"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new project_activity for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new project_activity was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Project Activity"
                ],
                "summary": "Update an existing project_activity",
                "description": "",
                "operationId": "update_project_activity",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "project_activity object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/project_activity"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project_activity not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project_activity/{project_activity_id}": {
            "get": {
                "tags": [
                    "Project Activity"
                ],
                "summary": "Find project_activity by ID",
                "description": "Returns a single project_activity",
                "operationId": "get_project_activity_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "project_activity_id",
                    "in": "path",
                    "description": "ID of project_activity to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/project_activity"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project_activity not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Project Activity"
                ],
                "summary": "Deletes an project_activity",
                "description": "",
                "operationId": "delete_project_activity",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_activity_id",
                        "in": "path",
                        "description": "project_activity id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project_activity not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project_budget_accounts": {
            "get": {
                "summary": "project_budget_accounts List",
                "description": "The project_budget_account endpoint returns multiple project_budget_account requested given the parameters injected. \n",
                "parameters": [{
                    "name": "project_budget_account_id",
                    "in": "query",
                    "description": "project_budget_account id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Project Budget Account"
                ],
                "responses": {
                    "200": {
                        "description": "An array of project_budget_account returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/project_budget_account"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project_budget_account": {
            "post": {
                "tags": [
                    "Project Budget Account"
                ],
                "summary": "Add a new project_budget_account",
                "description": "new project_budget_account",
                "operationId": "add_project_budget_account",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "project_budget_account object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/project_budget_account"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new project_budget_account for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new project_budget_account was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Project Budget Account"
                ],
                "summary": "Update an existing project_budget_account",
                "description": "",
                "operationId": "update_project_budget_account",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "project_budget_account object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/project_budget_account"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project_budget_account not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project_budget_account/{project_budget_account_id}": {
            "get": {
                "tags": [
                    "Project Budget Account"
                ],
                "summary": "Find project_budget_account by ID",
                "description": "Returns a single project_budget_account",
                "operationId": "get_project_budget_account_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "project_budget_account_id",
                    "in": "path",
                    "description": "ID of project_budget_account to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/project_budget_account"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project_budget_account not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Project Budget Account"
                ],
                "summary": "Deletes an project_budget_account",
                "description": "",
                "operationId": "delete_project_budget_account",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_budget_account_id",
                        "in": "path",
                        "description": "project_budget_account id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project_budget_account not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project_cash_needs": {
            "get": {
                "summary": "project_cash_needs List",
                "description": "The project_cash_need endpoint returns multiple project_cash_need requested given the parameters injected. \n",
                "parameters": [{
                    "name": "project_cash_need_id",
                    "in": "query",
                    "description": "project_cash_need id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Project Cash Needs"
                ],
                "responses": {
                    "200": {
                        "description": "An array of project_cash_need returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/project_cash_need"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project_cash_need": {
            "post": {
                "tags": [
                    "Project Cash Needs"
                ],
                "summary": "Add a new project_cash_need",
                "description": "new project_cash_need",
                "operationId": "add_project_cash_need",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "project_cash_need object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/project_cash_need"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new project_cash_need for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new project_cash_need was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Project Cash Needs"
                ],
                "summary": "Update an existing project_cash_need",
                "description": "",
                "operationId": "update_project_cash_need",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "project_cash_need object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/project_cash_need"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project_cash_need not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project_cash_need/{project_cash_need_id}": {
            "get": {
                "tags": [
                    "Project Cash Needs"
                ],
                "summary": "Find project_cash_need by ID",
                "description": "Returns a single project_cash_need",
                "operationId": "get_project_cash_need_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "project_cash_need_id",
                    "in": "path",
                    "description": "ID of project_cash_need to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/project_cash_need"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project_cash_need not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Project Cash Needs"
                ],
                "summary": "Deletes an project_cash_need",
                "description": "",
                "operationId": "delete_project_cash_need",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_cash_need_id",
                        "in": "path",
                        "description": "project_cash_need id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project_cash_need not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project_master_lists": {
            "get": {
                "summary": "project_master_lists List",
                "description": "The project_master_list endpoint returns multiple project_master_list requested given the parameters injected. \n",
                "parameters": [{
                    "name": "project_master_list_id",
                    "in": "query",
                    "description": "project_master_list id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Project Master List"
                ],
                "responses": {
                    "200": {
                        "description": "An array of project_master_list returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/project_master_list"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project_master_list": {
            "post": {
                "tags": [
                    "Project Master List"
                ],
                "summary": "Add a new project_master_list",
                "description": "new project_master_list",
                "operationId": "add_project_master_list",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "project_master_list object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/project_master_list"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new project_master_list for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new project_master_list was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Project Master List"
                ],
                "summary": "Update an existing project_master_list",
                "description": "",
                "operationId": "update_project_master_list",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "project_master_list object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/project_master_list"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project_master_list not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project_master_list/{project_master_list_id}": {
            "get": {
                "tags": [
                    "Project Master List"
                ],
                "summary": "Find project_master_list by ID",
                "description": "Returns a single project_master_list",
                "operationId": "get_project_master_list_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "project_master_list_id",
                    "in": "path",
                    "description": "ID of project_master_list to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/project_master_list"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project_master_list not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Project Master List"
                ],
                "summary": "Deletes an project_master_list",
                "description": "",
                "operationId": "delete_project_master_list",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_master_list_id",
                        "in": "path",
                        "description": "project_master_list id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project_master_list not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project_objectives": {
            "get": {
                "summary": "project_objectives List",
                "description": "The project_objective endpoint returns multiple project_objective requested given the parameters injected. \n",
                "parameters": [{
                    "name": "project_objective_id",
                    "in": "query",
                    "description": "project_objective id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Project Objective"
                ],
                "responses": {
                    "200": {
                        "description": "An array of project_objective returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/project_objective"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project_objective": {
            "post": {
                "tags": [
                    "Project Objective"
                ],
                "summary": "Add a new project_objective",
                "description": "new project_objective",
                "operationId": "add_project_objective",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "project_objective object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/project_objective"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new project_objective for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new project_objective was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Project Objective"
                ],
                "summary": "Update an existing project_objective",
                "description": "",
                "operationId": "update_project_objective",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "project_objective object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/project_objective"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project_objective not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project_objective/{project_objective_id}": {
            "get": {
                "tags": [
                    "Project Objective"
                ],
                "summary": "Find project_objective by ID",
                "description": "Returns a single project_objective",
                "operationId": "get_project_objective_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "project_objective_id",
                    "in": "path",
                    "description": "ID of project_objective to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/project_objective"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project_objective not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Project Objective"
                ],
                "summary": "Deletes an project_objective",
                "description": "",
                "operationId": "delete_project_objective",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_objective_id",
                        "in": "path",
                        "description": "project_objective id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project_objective not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project_teams": {
            "get": {
                "summary": "project_teams List",
                "description": "The project_team endpoint returns multiple project_team requested given the parameters injected. \n",
                "parameters": [{
                    "name": "project_team_id",
                    "in": "query",
                    "description": "project_team id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Project Team"
                ],
                "responses": {
                    "200": {
                        "description": "An array of project_team returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/project_team"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project_team": {
            "post": {
                "tags": [
                    "Project Team"
                ],
                "summary": "Add a new project_team",
                "description": "new project_team",
                "operationId": "add_project_team",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "project_team object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/project_team"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new project_team for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new project_team was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Project Team"
                ],
                "summary": "Update an existing project_team",
                "description": "",
                "operationId": "update_project_team",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "project_team object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/project_team"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project_team not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/project_team/{project_team_id}": {
            "get": {
                "tags": [
                    "Project Team"
                ],
                "summary": "Find project_team by ID",
                "description": "Returns a single project_team",
                "operationId": "get_project_team_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "project_team_id",
                    "in": "path",
                    "description": "ID of project_team to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/project_team"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project_team not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Project Team"
                ],
                "summary": "Deletes an project_team",
                "description": "",
                "operationId": "delete_project_team",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project_team_id",
                        "in": "path",
                        "description": "project_team id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "project_team not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/staffs": {
            "get": {
                "summary": "staffs List",
                "description": "The staff endpoint returns multiple staff requested given the parameters injected. \n",
                "parameters": [{
                    "name": "staff_id",
                    "in": "query",
                    "description": "staff id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Staff"
                ],
                "responses": {
                    "200": {
                        "description": "An array of staff returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/staff"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/staff": {
            "post": {
                "tags": [
                    "Staff"
                ],
                "summary": "Add a new staff",
                "description": "new staff",
                "operationId": "add_staff",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "staff object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/staff"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new staff for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new staff was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Staff"
                ],
                "summary": "Update an existing staff",
                "description": "",
                "operationId": "update_staff",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "staff object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/staff"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "staff not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/staff/{staff_id}": {
            "get": {
                "tags": [
                    "Staff"
                ],
                "summary": "Find staff by ID",
                "description": "Returns a single staff",
                "operationId": "get_staff_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "staff_id",
                    "in": "path",
                    "description": "ID of staff to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/staff"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "staff not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Staff"
                ],
                "summary": "Deletes an staff",
                "description": "",
                "operationId": "delete_staff",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "staff_id",
                        "in": "path",
                        "description": "staff id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "staff not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/departments": {
            "get": {
                "summary": "departments List",
                "description": "The department endpoint returns multiple department requested given the parameters injected. \n",
                "parameters": [{
                    "name": "department_id",
                    "in": "query",
                    "description": "department id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Department"
                ],
                "responses": {
                    "200": {
                        "description": "An array of department returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/department"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/department": {
            "post": {
                "tags": [
                    "Department"
                ],
                "summary": "Add a new department",
                "description": "new department",
                "operationId": "add_department",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "department object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/department"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new department for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new department was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Department"
                ],
                "summary": "Update an existing department",
                "description": "",
                "operationId": "update_department",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "department object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/department"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "department not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/department/{department_id}": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Find department by ID",
                "description": "Returns a single department",
                "operationId": "get_department_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "department_id",
                    "in": "path",
                    "description": "ID of department to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/department"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "department not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Department"
                ],
                "summary": "Deletes an department",
                "description": "",
                "operationId": "delete_department",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "department_id",
                        "in": "path",
                        "description": "department id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "department not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/roles": {
            "get": {
                "summary": "roles List",
                "description": "The role endpoint returns multiple role requested given the parameters injected. \n",
                "parameters": [{
                    "name": "role_id",
                    "in": "query",
                    "description": "role id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Roles"
                ],
                "responses": {
                    "200": {
                        "description": "An array of role returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/role"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/role": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Add a new role",
                "description": "new role",
                "operationId": "add_role",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "role object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/role"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new role for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new role was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update an existing role",
                "description": "",
                "operationId": "update_role",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "role object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/role"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "role not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/role/{role_id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Find role by ID",
                "description": "Returns a single role",
                "operationId": "get_role_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "role_id",
                    "in": "path",
                    "description": "ID of role to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/role"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "role not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Deletes an role",
                "description": "",
                "operationId": "delete_role",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "role_id",
                        "in": "path",
                        "description": "role id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "role not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/rights": {
            "get": {
                "summary": "rights List",
                "description": "The right endpoint returns multiple right requested given the parameters injected. \n",
                "parameters": [{
                    "name": "right_id",
                    "in": "query",
                    "description": "right id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Rights"
                ],
                "responses": {
                    "200": {
                        "description": "An array of right returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/right"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/right": {
            "post": {
                "tags": [
                    "Rights"
                ],
                "summary": "Add a new right",
                "description": "new right",
                "operationId": "add_right",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "right object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/right"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new right for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new right was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Rights"
                ],
                "summary": "Update an existing right",
                "description": "",
                "operationId": "update_right",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "right object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/right"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "right not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/right/{right_id}": {
            "get": {
                "tags": [
                    "Rights"
                ],
                "summary": "Find right by ID",
                "description": "Returns a single right",
                "operationId": "get_right_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "right_id",
                    "in": "path",
                    "description": "ID of right to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/right"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "right not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Rights"
                ],
                "summary": "Deletes an right",
                "description": "",
                "operationId": "delete_right",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "right_id",
                        "in": "path",
                        "description": "right id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "right not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/suppliers": {
            "get": {
                "summary": "suppliers List",
                "description": "The supplier endpoint returns multiple supplier requested given the parameters injected. \n",
                "parameters": [{
                    "name": "supplier_id",
                    "in": "query",
                    "description": "supplier id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Supplier"
                ],
                "responses": {
                    "200": {
                        "description": "An array of supplier returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/supplier"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/supplier": {
            "post": {
                "tags": [
                    "Supplier"
                ],
                "summary": "Add a new supplier",
                "description": "new supplier",
                "operationId": "add_supplier",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "supplier object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/supplier"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new supplier for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new supplier was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Supplier"
                ],
                "summary": "Update an existing supplier",
                "description": "",
                "operationId": "update_supplier",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "supplier object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/supplier"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "supplier not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/supplier/{supplier_id}": {
            "get": {
                "tags": [
                    "Supplier"
                ],
                "summary": "Find supplier by ID",
                "description": "Returns a single supplier",
                "operationId": "get_supplier_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "supplier_id",
                    "in": "path",
                    "description": "ID of supplier to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/supplier"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "supplier not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Supplier"
                ],
                "summary": "Deletes an supplier",
                "description": "",
                "operationId": "delete_supplier",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "supplier_id",
                        "in": "path",
                        "description": "supplier id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "supplier not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/supplier_rates": {
            "get": {
                "summary": "supplier_rates List",
                "description": "The supplier_rate endpoint returns multiple supplier_rate requested given the parameters injected. \n",
                "parameters": [{
                    "name": "supplier_rate_id",
                    "in": "query",
                    "description": "supplier_rate id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Supplier Rate"
                ],
                "responses": {
                    "200": {
                        "description": "An array of supplier_rate returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/supplier_rate"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/supplier_rate": {
            "post": {
                "tags": [
                    "Supplier Rate"
                ],
                "summary": "Add a new supplier_rate",
                "description": "new supplier_rate",
                "operationId": "add_supplier_rate",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "supplier_rate object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/supplier_rate"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new supplier_rate for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new supplier_rate was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Supplier Rate"
                ],
                "summary": "Update an existing supplier_rate",
                "description": "",
                "operationId": "update_supplier_rate",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "supplier_rate object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/supplier_rate"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "supplier_rate not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/supplier_rate/{supplier_rate_id}": {
            "get": {
                "tags": [
                    "Supplier Rate"
                ],
                "summary": "Find supplier_rate by ID",
                "description": "Returns a single supplier_rate",
                "operationId": "get_supplier_rate_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "supplier_rate_id",
                    "in": "path",
                    "description": "ID of supplier_rate to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/supplier_rate"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "supplier_rate not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Supplier Rate"
                ],
                "summary": "Deletes an supplier_rate",
                "description": "",
                "operationId": "delete_supplier_rate",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "supplier_rate_id",
                        "in": "path",
                        "description": "supplier_rate id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "supplier_rate not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/supply_categories": {
            "get": {
                "summary": "supply_categories List",
                "description": "The supply_category endpoint returns multiple supply_category requested given the parameters injected. \n",
                "parameters": [{
                    "name": "supply_category_id",
                    "in": "query",
                    "description": "supply_category id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Supply Category"
                ],
                "responses": {
                    "200": {
                        "description": "An array of supply_category returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/supply_category"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/supply_category": {
            "post": {
                "tags": [
                    "Supply Category"
                ],
                "summary": "Add a new supply_category",
                "description": "new supply_category",
                "operationId": "add_supply_category",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "supply_category object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/supply_category"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new supply_category for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new supply_category was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Supply Category"
                ],
                "summary": "Update an existing supply_category",
                "description": "",
                "operationId": "update_supply_category",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "supply_category object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/supply_category"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "supply_category not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/supply_category/{supply_category_id}": {
            "get": {
                "tags": [
                    "Supply Category"
                ],
                "summary": "Find supply_category by ID",
                "description": "Returns a single supply_category",
                "operationId": "get_supply_category_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "supply_category_id",
                    "in": "path",
                    "description": "ID of supply_category to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/supply_category"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "supply_category not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Supply Category"
                ],
                "summary": "Deletes an supply_category",
                "description": "",
                "operationId": "delete_supply_category",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "supply_category_id",
                        "in": "path",
                        "description": "supply_category id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "supply_category not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/supply_category_items": {
            "get": {
                "summary": "supply_category_items List",
                "description": "The supply_category_item endpoint returns multiple supply_category_item requested given the parameters injected. \n",
                "parameters": [{
                    "name": "supply_category_item_id",
                    "in": "query",
                    "description": "supply_category_item id",
                    "required": false,
                    "type": "number",
                    "format": "integer"
                }],
                "tags": [
                    "Supply Category Item"
                ],
                "responses": {
                    "200": {
                        "description": "An array of supply_category_item returned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/supply_category_item"
                            }
                        }
                    },
                    "404": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/supply_category_item": {
            "post": {
                "tags": [
                    "Supply Category Item"
                ],
                "summary": "Add a new supply_category_item",
                "description": "new supply_category_item",
                "operationId": "add_supply_category_item",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "supply_category_item object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/supply_category_item"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new supply_category_item for approval"
                    },
                    "405": {
                        "description": "Invalid input,adding a new supply_category_item was unsuccessful"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "put": {
                "tags": [
                    "Supply Category Item"
                ],
                "summary": "Update an existing supply_category_item",
                "description": "",
                "operationId": "update_supply_category_item",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "supply_category_item object that needs to be added",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/supply_category_item"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "supply_category_item not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        },
        "/supply_category_item/{supply_category_item_id}": {
            "get": {
                "tags": [
                    "Supply Category Item"
                ],
                "summary": "Find supply_category_item by ID",
                "description": "Returns a single supply_category_item",
                "operationId": "get_supply_category_item_by_id",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "supply_category_item_id",
                    "in": "path",
                    "description": "ID of supply_category_item to return object",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/supply_category_item"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "supply_category_item not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            },
            "delete": {
                "tags": [
                    "Supply Category Item"
                ],
                "summary": "Deletes an supply_category_item",
                "description": "",
                "operationId": "delete_supply_category_item",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "api_key",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "supply_category_item_id",
                        "in": "path",
                        "description": "supply_category_item id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "supply_category_item not found"
                    }
                },
                "security": [{
                    "api_key": []
                }]
            }
        }
    },
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "definitions": {
        "account": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "account"
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "object not found"
                }
            }
        },
        "Success": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string",
                    "example": "object not found"
                }
            }
        },
        "advance": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "advance"
            }
        },
        "advance_status": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "advance_status"
            }
        },
        "advance_approval": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "advance_approval"
            }
        },
        "advance_allocation": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "advance_allocation"
            }
        },
        "allocation": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "allocation"
            }
        },
        "approval": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "approval"
            }
        },
        "claim": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "claim"
            }
        },
        "claim_status": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "claim_status"
            }
        },
        "claim_approval": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "claim_approval"
            }
        },
        "claim_allocation": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "claim_allocation"
            }
        },
        "delivery": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "delivery"
            }
        },
        "delivery_status": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "delivery_status"
            }
        },
        "delivery_approval": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "delivery_approval"
            }
        },
        "invoice": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "invoice"
            }
        },
        "invoice_status": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "invoice_status"
            }
        },
        "invoice_approval": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "invoice_approval"
            }
        },
        "invoice_allocation": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "invoice_allocation"
            }
        },
        "currency": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "currency"
            }
        },
        "lpo": {
            "type": "object",
            "required": [
                "id",
                "chai_ref",
                "lpo_date",
                "addressee",
                "title",
                "purpose",
                "request_date",
                "status",
                "currency",
                "quotation",
                "supply_category",
                "delivery_document",
                "date_delivered",
                "meeting",
                "comments",
                "preffered_supplier",
                "attention",
                "lpo_email",
                "rejection_reason",
                "quote_exempt",
                "quote_exempt_explanation",
                "account_id",
                "project_manager_id",
                "received_by",
                "project_id",
                "requested_by",
                "supplier_id",
                "created_at",
                "updated_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "chai_ref": {
                    "type": "string",
                    "example": "REF-100001"
                },
                "lpo_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "addressee": {
                    "type": "string",
                    "example": "Kevin Mwangi"
                },
                "title": {
                    "type": "string",
                    "example": "Print Paper"
                },
                "purpose": {
                    "type": "string",
                    "example": "Office Supplies"
                },
                "request_date": {
                    "type": "string",
                    "example": "REF-100001"
                },
                "status": {
                    "type": "integer",
                    "format": "int64",
                    "description": "lpo status",
                    "example": 2
                },
                "currency": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "quotation": {
                    "type": "integer",
                    "format": "int64",
                    "example": 123
                },
                "supply_category": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "delivery_document": {
                    "type": "string",
                    "description": "delivery document scanned and stored",
                    "example": "delivered.pdf"
                },
                "date_delivered": {
                    "type": "string",
                    "format": "date",
                    "example": "2017-01-01"
                },
                "meeting": {
                    "type": "integer",
                    "format": "int64",
                    "example": 23
                },
                "comments": {
                    "type": "string",
                    "example": "Everything seems fine"
                },
                "preffered_supplier": {
                    "type": "integer",
                    "format": "int64",
                    "example": 25
                },
                "attention": {
                    "type": "string",
                    "example": "Sir"
                },
                "lpo_email": {
                    "type": "string",
                    "example": "mwangikevinn@gmail.com"
                },
                "rejection_reason": {
                    "type": "string",
                    "example": "No currency indicated"
                },
                "quote_exempt": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "quote_exempt_explanation": {
                    "type": "string",
                    "example": "Short delivery time required"
                },
                "account_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 43
                },
                "project_manager_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 23
                },
                "received_by": {
                    "type": "integer",
                    "format": "int64",
                    "example": 23
                },
                "project_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2
                },
                "requested_by": {
                    "type": "integer",
                    "format": "int64",
                    "example": 23
                },
                "supplier_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "lpo"
            }
        },
        "lpo_status": {
            "type": "object",
            "required": [
                "id",
                "lpo_status",
                "next_status",
                "status_security_level",
                "created_at",
                "updated_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "lpo_status": {
                    "type": "string",
                    "example": "Pending management approval"
                },
                "next_status": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "status_security_level": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "lpo"
            }
        },
        "lpo_quotation": {
            "type": "object",
            "required": [
                "id",
                "lpo_id",
                "supplier_id",
                "created_at",
                "updated_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "lpo_id": {
                    "type": "integer",
                    "example": 10
                },
                "supplier_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2
                },
                "amount": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "quote_description": {
                    "type": "string",
                    "example": "Trial"
                },
                "quotation_doc": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "quote_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "uploaded_by_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "lpo_quotation"
            }
        },
        "lpo_item": {
            "type": "object",
            "required": [
                "id",
                "lpo_id",
                "created_at",
                "updated_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "lpo_id": {
                    "type": "integer",
                    "example": 10
                },
                "item_description": {
                    "type": "string",
                    "example": "Trial"
                },
                "unit_price": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "vat_inclusive": {
                    "type": "integer",
                    "example": 0
                },
                "vat_charge": {
                    "type": "number",
                    "format": "int64",
                    "example": 200.1
                },
                "qty": {
                    "type": "integer",
                    "example": 10
                },
                "qty_description": {
                    "type": "integer",
                    "example": 10
                },
                "quotation": {
                    "type": "integer",
                    "example": 1
                },
                "item_name": {
                    "type": "string",
                    "example": "HP Pro 3500 Microtower PC, IntelÂ® Coreâ„¢ i3- 3240"
                },
                "uploaded_by_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "lpo_item"
            }
        },
        "lpo_term": {
            "type": "object",
            "required": [
                "id",
                "lpo_id",
                "created_at",
                "updated_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "lpo_id": {
                    "type": "integer",
                    "example": 10
                },
                "term": {
                    "type": "string",
                    "example": "Delivered at 12:00"
                },
                "uploaded_by_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "lpo_term"
            }
        },
        "lpo_comment": {
            "type": "object",
            "required": [
                "id",
                "lpo_id",
                "created_at",
                "updated_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "lpo_id": {
                    "type": "integer",
                    "example": 10
                },
                "comment": {
                    "type": "string",
                    "example": "Trial"
                },
                "comment_doc": {
                    "type": "string",
                    "example": "Needs 3 quotations"
                },
                "commentor_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2
                },
                "at_status_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "lpo_comment"
            }
        },
        "lpo_viewing_permission": {
            "type": "object",
            "required": [
                "id",
                "created_at",
                "updated_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "lpo_status": {
                    "type": "string",
                    "example": "Trial"
                },
                "security_level_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "display_color": {
                    "type": "string",
                    "example": "#000"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "lpo_viewing_permission"
            }
        },
        "lpo_approval": {
            "type": "object",
            "required": [
                "id",
                "lpo_id",
                "created_at",
                "updated_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "lpo_id": {
                    "type": "integer",
                    "example": 10
                },
                "approval_level_id": {
                    "type": "integer",
                    "example": 10
                },
                "approver_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "lpo_approval"
            }
        },
        "lpo_default_term": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "terms": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "lpo_default_term"
            }
        },
        "mobile_payment": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "mobile_payment"
            }
        },
        "mobile_payment_approval": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "mobile_payment_approval"
            }
        },
        "mobile_payment_allocation": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "mobile_payment_allocation"
            }
        },
        "mobile_payment_payee": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "mobile_payment_payee"
            }
        },
        "mobile_payment_status": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "mobile_payment_status"
            }
        },
        "mobile_payment_tariff": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "mobile_payment_tariff"
            }
        },
        "mobile_payment_type": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "mobile_payment_type"
            }
        },
        "mobile_payment_viewing_permission": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "mobile_payment_viewing_permission"
            }
        },
        "payees_upload_mode": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "payees_upload_mode"
            }
        },
        "payment": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "payment"
            }
        },
        "payment_batch": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "payment_batch"
            }
        },
        "payment_mode": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "payment_mode"
            }
        },
        "payment_type": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "payment_type"
            }
        },
        "payment_voucher": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "payment_type"
            }
        },
        "project": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "project"
            }
        },
        "project_activity": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "project_activity"
            }
        },
        "project_budget_account": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "project_budget_account"
            }
        },
        "project_cash_need": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "project_cash_need"
            }
        },
        "project_master_list": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "project_master_list"
            }
        },
        "project_objective": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "project_objective"
            }
        },
        "project_team": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "project_team"
            }
        },
        "staff": {
            "type": "object",
            "required": [
                "id",
                "created_at",
                "updated_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "username": {
                    "type": "string",
                    "example": "kevin"
                },
                "f_name": {
                    "type": "string",
                    "example": "kevin"
                },
                "l_name": {
                    "type": "string",
                    "example": "mwangi"
                },
                "department_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "email": {
                    "type": "string",
                    "example": "kevin@mail.com"
                },
                "role_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "roles": {
                    "title": "Array Of Roles",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/role"
                    }
                },
                "is_admin": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "post": {
                    "type": "string",
                    "example": "program manager"
                },
                "mobile_no": {
                    "type": "string",
                    "example": "+254723568945"
                },
                "bank_account": {
                    "type": "string",
                    "example": "23132165465"
                },
                "cheque_addresse": {
                    "type": "string",
                    "example": "kevin"
                },
                "payment_mode_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "bank_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "bank_branch_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "station_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "swift_code": {
                    "type": "string",
                    "example": "45645"
                },
                "signature": {
                    "type": "string",
                    "example": "kevin.pdf"
                },
                "active": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "staff"
            }
        },
        "department": {
            "type": "object",
            "required": [
                "id",
                "created_at",
                "updated_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "department_name": {
                    "type": "string",
                    "example": "Finance"
                },
                "desc": {
                    "type": "string",
                    "example": "Finance Dpt"
                },
                "acronym": {
                    "type": "string",
                    "example": "Fin"
                },
                "HOD_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 12
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "department"
            }
        },
        "role": {
            "type": "object",
            "required": [
                "id",
                "created_at",
                "updated_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "role_name": {
                    "type": "string",
                    "example": "Finance Manager"
                },
                "desc": {
                    "type": "string",
                    "example": "Financial Controller"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "role"
            }
        },
        "right": {
            "type": "object",
            "required": [
                "id",
                "created_at",
                "updated_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "right_name": {
                    "type": "string",
                    "example": "Approve LPO "
                },
                "desc": {
                    "type": "string",
                    "example": "Approve LPO Finance Level"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "role"
            }
        },
        "supplier": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "Supplier"
            }
        },
        "supplier_rate": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "supplier_rate"
            }
        },
        "supply_category": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "supply_category"
            }
        },
        "supply_category_item": {
            "type": "object",
            "required": [
                "id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "num": {
                    "type": "number",
                    "format": "int64",
                    "example": 20000
                },
                "str": {
                    "type": "string",
                    "example": "PayPal.pdf"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2010-02-11"
                }
            },
            "xml": {
                "name": "supply_category_item"
            }
        }
    }
}