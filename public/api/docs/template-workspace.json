{
 "swagger": "2.0",
 "info": {
  "description": "Finance management sysytem",
  "version": "1.0.0",
  "title": "Grants Information Management System",
  "termsOfService": "http://kefinance.clintonhealthaccess.org/terms/",
  "contact": {
   "email": "mwangikevinn@gmail.com"
  },
  "license": {
   "name": "Apache 2.0",
   "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
  }
 },
 "host": "localhost:8000",
 "basePath": "/api",
 "tags": [
  {
   "name": "LPO Default Term",
   "description": "Everything About LPO Default Term",
   "externalDocs": {
    "description": "Find out more",
    "url": "http://kefinance.clintonhealthaccess.org/api/lpo_default_term/docs"
   }
  }
 ],
 "schemes": [
  "http",
  "https"
 ],
 "paths": {
  "/lpo_default_terms": {
   "get": {
    "summary": "lpo_default_terms List",
    "description": "The lpo_default_term endpoint returns multiple lpo_default_term requested given the parameters injected. \n",
    "parameters": [
     {
      "name": "lpo_default_term_id",
      "in": "query",
      "description": "lpo_default_term id",
      "required": false,
      "type": "number",
      "format": "integer"
     }
    ],
    "tags": [
     "LPO Default Term"
    ],
    "responses": {
     "200": {
      "description": "An array of lpo_default_term returned",
      "schema": {
       "type": "array",
       "items": {
        "$ref": "#/definitions/lpo_default_term"
       }
      }
     },
     "404": {
      "description": "Unexpected error",
      "schema": {
       "$ref": "#/definitions/Error"
      }
     }
    },
    "security": [
     {
      "api_key": []
     }
    ]
   }
  },
  "/lpo_default_term": {
   "post": {
    "tags": [
     "LPO Default Term"
    ],
    "summary": "Add a new lpo_default_term",
    "description": "new lpo_default_term",
    "operationId": "add_lpo_default_term",
    "consumes": [
     "application/json",
     "application/xml"
    ],
    "produces": [
     "application/json",
     "application/xml"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "body",
      "description": "lpo_default_term object that needs to be added",
      "required": true,
      "schema": {
       "$ref": "#/definitions/lpo_default_term"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully added a new lpo_default_term for approval"
     },
     "405": {
      "description": "Invalid input,adding a new lpo_default_term was unsuccessful"
     }
    },
    "security": [
     {
      "api_key": []
     }
    ]
   },
   "put": {
    "tags": [
     "LPO Default Term"
    ],
    "summary": "Update an existing lpo_default_term",
    "description": "",
    "operationId": "update_lpo_default_term",
    "consumes": [
     "application/json",
     "application/xml"
    ],
    "produces": [
     "application/json",
     "application/xml"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "body",
      "description": "lpo_default_term object that needs to be added",
      "required": true,
      "schema": {
       "$ref": "#/definitions/lpo_default_term"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Unexpected error",
      "schema": {
       "$ref": "#/definitions/Success"
      }
     },
     "400": {
      "description": "Invalid ID supplied"
     },
     "404": {
      "description": "lpo_default_term not found"
     },
     "405": {
      "description": "Validation exception"
     }
    },
    "security": [
     {
      "api_key": []
     }
    ]
   }
  },
  "/lpo_default_term/{lpo_default_term_id}": {
   "get": {
    "tags": [
     "LPO Default Term"
    ],
    "summary": "Find lpo_default_term by ID",
    "description": "Returns a single lpo_default_term",
    "operationId": "get_lpo_default_term_by_id",
    "produces": [
     "application/json",
     "application/xml"
    ],
    "parameters": [
     {
      "name": "lpo_default_term_id",
      "in": "path",
      "description": "ID of lpo_default_term to return object",
      "required": true,
      "type": "integer",
      "format": "int64"
     }
    ],
    "responses": {
     "200": {
      "description": "successful operation",
      "schema": {
       "$ref": "#/definitions/lpo_default_term"
      }
     },
     "400": {
      "description": "Invalid ID supplied"
     },
     "404": {
      "description": "lpo_default_term not found"
     }
    },
    "security": [
     {
      "api_key": []
     }
    ]
   },
   "delete": {
    "tags": [
     "LPO Default Term"
    ],
    "summary": "Deletes an lpo_default_term",
    "description": "",
    "operationId": "delete_lpo_default_term",
    "produces": [
     "application/json",
     "application/xml"
    ],
    "parameters": [
     {
      "name": "api_key",
      "in": "header",
      "required": true,
      "type": "string"
     },
     {
      "name": "lpo_default_term_id",
      "in": "path",
      "description": "lpo_default_term id to delete",
      "required": true,
      "type": "integer",
      "format": "int64"
     }
    ],
    "responses": {
     "400": {
      "description": "Invalid ID supplied"
     },
     "404": {
      "description": "lpo_default_term not found"
     }
    },
    "security": [
     {
      "api_key": []
     }
    ]
   }
  }
 },
 "securityDefinitions": {
  "api_key": {
   "type": "apiKey",
   "name": "Authorization",
   "in": "header"
  }
 },
 "definitions": {
  "lpo_default_term": {
   "type": "object",
   "required": [
    "id",
    "created_at"
   ],
   "properties": {
    "id": {
     "type": "integer",
     "format": "int64",
     "example": 1
    },
    "num": {
     "type": "number",
     "format": "int64",
     "example": 20000
    },
    "str": {
     "type": "string",
     "example": "PayPal.pdf"
    },
    "date": {
     "type": "string",
     "format": "date-time",
     "example": "2010-02-11"
    },
    "created_at": {
     "type": "string",
     "format": "date-time",
     "example": "2010-02-11"
    },
    "updated_at": {
     "type": "string",
     "format": "date-time",
     "example": "2010-02-11"
    }
   },
   "xml": {
    "name": "lpo_default_term"
   }
  },
  "Error": {
   "type": "object",
   "properties": {
    "error": {
     "type": "string",
     "example": "object not found"
    }
   }
  },
  "Success": {
   "type": "object",
   "properties": {
    "msg": {
     "type": "string",
     "example": "object not found"
    }
   }
  }
 }
}